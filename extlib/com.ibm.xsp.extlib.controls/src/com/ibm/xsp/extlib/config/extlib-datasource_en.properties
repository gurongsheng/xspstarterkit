# *****************************************************************
# /*
# * Copyright IBM Corp. 2010, 2013
# * 
# * Licensed under the Apache License, Version 2.0 (the "License"); 
# * you may not use this file except in compliance with the License. 
# * You may obtain a copy of the License at:
# * 
# * http://www.apache.org/licenses/LICENSE-2.0
# * 
# * Unless required by applicable law or agreed to in writing, software 
# * distributed under the License is distributed on an "AS IS" BASIS, 
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or 
# * implied. See the License for the specific language governing 
# * permissions and limitations under the License.
# */
# *****************************************************************
# DO NOT EDIT. THIS FILE IS GENERATED.
# NLS_ENCODING=UNICODE 
# NLS_MARKUP=IBMNJDK2 
# NLS_MESSAGEFORMAT_NONE
## G11N SA UI -- Special IT Audience resources follow
complex-type.com.ibm.xsp.extlib.model.DataAccessorSource.name= Abstract List Data Source Using Accessor
complex-type.com.ibm.xsp.extlib.model.DataAccessorSource.descr= Abstract class for data source for lists coming from a data accessor
property.clearOnRendering.name= Clear on Rendering
# "beforeRenderingPhase" should not be translated
property.clearOnRendering.descr= Indicates if the data should be refreshed each time it is rendered. If specified - occurs during "beforeRenderingPhase" notification processing. Default is not to refresh.
property.cacheSuffix.name= Cache Suffix for Data Storage
# "applicationScope" and "sessionScope" are technical terms and should not be translated.
property.cacheSuffix.descr= Used when the data source is using either the applicationScope or the sessionScope, and thus can be shared by multiple pages. This ID is used to identify the cached data.
complex-type.com.ibm.xsp.extlib.model.DataAccessorBlockSource.name= Abstract List Data Source Using Accessor and Managing Data Blocks
complex-type.com.ibm.xsp.extlib.model.DataAccessorBlockSource.descr= Abstract class for data source managing blocks of data. Block size is initially set to 20 of data items and will be changed dynamically depending on a count of items requested by some code.
property.maxBlockCount.name= Max Block Count
property.maxBlockCount.descr= Used by the data source if it caches blocks of data. Default is 0. Values of 0 and 1 mean that an existing block is discarded when a new block is added.
property.timeout.name= Block Timeout
property.timeout.descr= Defines the timeout, in seconds, for a block of data. When a block times out, then it is discarded from memory and another data access is performed.
complex-type.objectData.name= Object Data Source
complex-type.objectData.descr= An object data source creates and manipulate an object (Java or JavaScript). The object must be serializable and owned by the data source (should not be a bean owned by a scope).
property.readonly.name= Read Only Flag
# "false" should not be translated
property.readonly.descr= Value "true" indicates that this data source is read only. Default is "false".
property.createObject.name= Create an Object Script Expression
property.createObject.descr= This script is triggered to create the object handled by the data source.
property.saveObject.name= Save an Object Script Expression
# "true" should not be translated
property.saveObject.descr= This script is triggered to save the object handled by the data source. It will not be used if the Read Only Flag property is set to "true".
