<?xml version="1.0" encoding="UTF-8"?>
<!-- ******************************************************************* -->
<!--                                                                     -->
<!-- Â© Copyright IBM Corp. 2010, 2012                                    -->
<!--                                                                     -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");     -->
<!-- you may not use this file except in compliance with the License.    -->
<!-- You may obtain a copy of the License at:                            -->
<!--                                                                     -->
<!-- http://www.apache.org/licenses/LICENSE-2.0                          -->
<!--                                                                     -->
<!-- Unless required by applicable law or agreed to in writing, software -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,   -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or     -->
<!-- implied. See the License for the specific language governing        -->
<!-- permissions and limitations under the License.                      -->
<!--                                                                     -->
<!-- ******************************************************************* -->
<faces-config>

  <faces-config-extension>
    <namespace-uri>http://www.ibm.com/xsp/coreex</namespace-uri>
    <default-prefix>xe</default-prefix>
    <designer-extension>
        <control-subpackage-name>dojo.form</control-subpackage-name>
    </designer-extension>
  </faces-config-extension>

    <!-- Start of Dojo Controls Complex Types -->
    <complex-type>
        <description>Allows adding min and max values as constraints</description>
        <display-name>Number Constraints</display-name>
        <complex-id>com.ibm.xsp.extlib.component.dojo.form.constraints.NumberConstraints</complex-id>
        <complex-class>com.ibm.xsp.extlib.component.dojo.form.constraints.NumberConstraints</complex-class>
        <property>
            <description>When this property is present the number value in the control is restricted to this minimum value. If the number provided is less than this value, an error will be shown. This minimum may be negative or positive.</description>
            <display-name>Minimum Value</display-name>
            <property-name>min</property-name>
            <property-class>double</property-class>
            <!-- Note, the default in the getter is Double.NaN, 
            but the default in the js control is -Infinity. 
            Also, this value is a double, where as the js control allows
            a JavaScript number, which may be integral.
            -->
        </property>

        <property>
            <description>When this property is present the number value in the control is restricted to this maximum value. If the number provided is greater than this value, an error will be shown. This maximum may be negative or positive.</description>
            <display-name>Maximum Value</display-name>
            <property-name>max</property-name>
            <property-class>double</property-class>
            <!-- Note, the default in the getter is Double.NaN, 
            but the default in the js control is +Infinity. 
            Also, this value is a double, where as the js control allows
            a JavaScript number, which may be integral.
            -->
        </property>

        <property>
            <!-- #"ISO 4217" and "USD" should not be translated -->
            <description>(Currency Only) The ISO 4217 currency code, a three letter sequence like "USD" for US Dollars</description>
            <display-name>Currency</display-name>
            <property-name>currency</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <!-- Maybe ask for a currency code editor, for here 
                    and the xp:numberConverter currencyCode property -->
                    <editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
                    <!-- Only listing the 2 most used reserve currencies,
                    rather than attempting a larger list and getting it wrong. -->
                    <editor-parameter>
                        USD
                        EUR
                    </editor-parameter>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <!-- # "places" "enable", "disable", "auto", "true", "false" should not be translated -->
            <description>(Currency Only) Where places are implied by the pattern or explicit in the "places" property, this specifies whether to include the fractional portion. Acceptable values are either "enable", "disable", "auto", "true" or "false".</description>
            <display-name>Fractional</display-name>
            <property-name>fractional</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
                    <editor-parameter>
                        enable
                        disable
                        auto
                        true
                        false
                    </editor-parameter>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <!-- # "extraLocale" should not be translated -->
            <description>Override the locale used to determine formatting rules. Locales must be among the list of "extraLocale" specified during the Dojo bootstrap</description>
            <display-name>Locale</display-name>
            <property-name>locale</property-name>
            <property-class>java.util.Locale</property-class>
            <property-extension>
                <designer-extension>
                    <editor>com.ibm.workplace.designer.property.editors.langPicker</editor>
                    <!-- TODO ProposedBreakingChange Java to Dojo locale format conversion required -->
                    <tags>
                        todo
                    </tags>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Override localized convention with this pattern. As a result, all users will see the same behavior, regardless of locale, and your application may not be globalized. See Unicode Technical Standard 35.</description>
            <display-name>Pattern</display-name>
            <property-name>pattern</property-name>
            <property-class>java.lang.String</property-class>
        </property>

        <property>
            <description>The number of digits to display after the decimal point.</description>
            <display-name>Places</display-name>
            <property-name>places</property-name>
            <property-class>int</property-class>
            <property-extension>
                <default-value>-1</default-value>
            </property-extension>
        </property>

        <property>
            <description>Strict parsing, false by default. When strict mode is false, certain allowances are made to be more tolerant of user input, such as abbreviations, and some white space may be optional, etc.</description>
            <display-name>Strict Parsing</display-name>
            <property-name>strict</property-name>
            <property-class>boolean</property-class>
        </property>

        <property>
            <description>(Currency Only) Override currency symbol. Normally, will be looked up in localized table of supported currencies (Dojo "CLDR") 3-letter ISO 4217 currency code will be used if not found.</description>
            <display-name>Currency Symbol</display-name>
            <property-name>symbol</property-name>
            <property-class>java.lang.String</property-class>
        </property>

        <property>
            <!-- # "decimal", "scientific", "percent", "currency" should not be translated -->
            <description>Choose a format type based on the locale from the following: "decimal", "scientific" (not yet supported), "percent", "currency".</description>
            <display-name>Format Type</display-name>
            <property-name>type</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
                    <editor-parameter>
                        decimal
                        scientific
                        percent
                        currency
                    </editor-parameter>
                </designer-extension>
            </property-extension>
        </property>

        <complex-extension>
            <tag-name>djNumberConstraints</tag-name>
        </complex-extension>
    </complex-type>

    <complex-type>
        <description>Allows to add constraints such as min, max, valid days of the week etc.</description>
        <display-name>Date Time Constraints</display-name>
        <complex-id>com.ibm.xsp.extlib.component.dojo.form.constraints.DateTimeConstraints</complex-id>
        <complex-class>com.ibm.xsp.extlib.component.dojo.form.constraints.DateTimeConstraints</complex-class>

        <property>
            <description>Override text for "A.M." in time values</description>
            <display-name>Ante Meridiem (A.M.)</display-name>
            <property-name>am</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <localizable>true</localizable>
                <designer-extension>
                    <tags>
                        localizable-text
                    </tags>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Override text for "P.M." in time values</description>
            <display-name>Post Meridiem (P.M.)</display-name>
            <property-name>pm</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <localizable>true</localizable>
                <designer-extension>
                    <tags>
                        localizable-text
                    </tags>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>(Time Text Box) ISO-8601 formatted text representing the amount by which every clickable element in the time picker increases. For example "T00:15:00" creates 15 minute increments. Must divide "visibleIncrement" evenly.</description>
            <display-name>Clickable Increment</display-name>
            <property-name>clickableIncrement</property-name>
            <property-class>java.lang.String</property-class>
        </property>

        <property>
            <description>Override localized convention with this date pattern. As a result, all users will see the same behavior, regardless of locale, and your application may not be globalized. See Unicode Technical Standard 35 Date Format Patterns.</description>
            <display-name>Date Pattern</display-name>
            <property-name>datePattern</property-name>
            <property-class>java.lang.String</property-class>
        </property>

        <property>
            <description>Override localized convention with this time pattern. As a result, all users will see the same behavior, regardless of locale, and your application may not be globalized. See Unicode Technical Standard 35 Number Format Patterns.</description>
            <display-name>Time Pattern</display-name>
            <property-name>timePattern</property-name>
            <property-class>java.lang.String</property-class>
        </property>

        <property>
            <!-- # "long", "short", "medium", "full" should not be translated -->
            <description>Choose from formats appropriate to the locale either "long", "short", "medium" or "full".</description>
            <display-name>Format Length</display-name>
            <property-name>formatLength</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
					<editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
					<editor-parameter>
						long
						short
						medium
						full
					</editor-parameter>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <!-- # "extraLocale" should not be translated -->
            <description>Override the locale used to determine formatting rules. Locales must be among the list of "extraLocale" specified during the Dojo bootstrap</description>
            <display-name>Locale</display-name>
            <property-name>locale</property-name>
            <property-class>java.util.Locale</property-class>
            <property-extension>
                <designer-extension>
                    <editor>com.ibm.workplace.designer.property.editors.langPicker</editor>
                    <!-- TODO ProposedBreakingChange Java to Dojo locale format conversion required -->
                    <tags>
                        todo
                    </tags>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <!-- # "time", "date" should not be translated -->
            <description>Choice of "time" or "date", If omitted, default is both date and time</description>
            <display-name>Selector</display-name>
            <property-name>selector</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
                    <editor-parameter>
                        time
                        date
                    </editor-parameter>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Strict parsing, false by default. If true, parsing matches exactly by regular expression. If false, more tolerant matching is used for abbreviations and some white space.</description>
            <display-name>Strict Parsing</display-name>
            <property-name>strict</property-name>
            <property-class>boolean</property-class>
        </property>

        <property>
            <description>(Time Text Box) ISO-8601 formatted text representing the amount by which every element with a visible time in the time picker increases. For example "T01:00:00" creates text in every 1 hour increment.</description>
            <display-name>Visible Increment</display-name>
            <property-name>visibleIncrement</property-name>
            <property-class>java.lang.String</property-class>
        </property>

        <property>
            <description>(Time Text Box): ISO-8601 formatted text representing the range of this time picker. The time picker will only display times in this range. For example "T05:00:00" displays 5 hours of options</description>
            <display-name>Visible Range</display-name>
            <property-name>visibleRange</property-name>
            <property-class>java.lang.String</property-class>
        </property>

        <complex-extension>
            <tag-name>djDateTimeConstraints</tag-name>
        </complex-extension>
    </complex-type>
    <!-- End of Dojo Controls Complex Types -->


    <component>
        <description>Base Dojo Form Control</description>
        <display-name>Dojo Form Control</display-name>
        <component-type>com.ibm.xsp.extlib.dojo.form.FormWidgetBase</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoFormWidgetBase</component-class>
        <group-type-ref>com.ibm.xsp.extlib.group.dojo.widgetBase</group-type-ref>
        <group-type-ref>com.ibm.xsp.extlib.group.dojo.widget</group-type-ref>

        <property>
           <!-- # "input" should not be translated -->
            <description>Alternate text that should appear should the browser not be able to display - a somewhat uncommon event for forms, although still common enough for images. Corresponds to the native HTML "input" element equivalent.</description>
            <display-name>Alternate Text</display-name>
            <property-name>alt</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <localizable>true</localizable>
                <designer-extension>
                    <category>accessibility</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <!-- # "submit", "onsubmit", "text" should not be translated -->
            <description>Specifies the type of the element when more than one kind is possible. For example, a button might have type "submit" to trigger the form "onsubmit" action; works just like its pure HTML equivalent. If omitted, by default this property is "text".</description>
            <display-name>Control Type</display-name>
            <property-name>type</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                        <editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
                        <editor-parameter>
                            text
                            password
                            checkbox
                            radio
                            submit
                            reset
                            file
                            hidden
                            image
                            button
                        </editor-parameter>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Specifies the order in which fields are traversed when using keyboard navigation. If omitted, by default this value is "0".</description>
            <display-name>Tab Index</display-name>
            <property-name>tabIndex</property-name>
            <property-class>int</property-class>
            <property-extension>
                <designer-extension>
                    <category>accessibility</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Specifies whether a control should respond to user input. This disables a control so that it cannot receive focus and is skipped in tabbing navigation. Do not attempt to use this property on an element that does not support it. Controls that are disabled are not included in form submissions. This property is false by default.</description>
            <display-name>Disabled</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Specifies whether changes by the user to this control are prohibited.</description>
            <display-name>Read Only Flag</display-name>
            <property-name>readOnly</property-name>
            <property-class>boolean</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Whether to fire the "onChange" event for each value change. This property is false by default.</description>
            <display-name>Intermediate Changes</display-name>
            <property-name>intermediateChanges</property-name>
            <property-class>boolean</property-class>
            <property-extension>
                <designer-extension>
                    <category>dojo</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>JavaScript code executed when this control loses focus and its value has been modified since gaining focus</description>
            <display-name>Input Change Script</display-name>
            <property-name>onChange</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <category>events</category>
                    <event>true</event>
                    <subcategory>change-event</subcategory>
                </designer-extension>
            </property-extension>
        </property>
        
        <property>
          <!-- # "constraints" should not be translated -->
          <description>This property does nothing as Client Side Validation is always disabled for Dojo controls. That differs from the normal XPages Edit Box control where client-side validation is enabled by default, and the Disable Client Side Validation property can be used to prevent such validation. For Dojo input controls, the normal validation pop-up dialogs will never appear, although for some controls there is a "constraints" property which can configure behavior similar to validation.</description>
          <display-name>Disable Client Side Validation (Ignored)</display-name>
          <property-name>disableClientSideValidation</property-name>
          <property-class>boolean</property-class>
          <property-extension>
            <!-- This is overriding the superclass property from UIInputEx,
                to provide a different description, and some junit skips,
                because the property doesn't work in Dojo controls. -->
            <allow-run-time-binding>true</allow-run-time-binding>
            <designer-extension>
              <!-- deprecating the property, so there is a warning in the Problems view 
              when it is used, as setting the property does nothing. -->
              <is-deprecated>true</is-deprecated>
              <category>data</category>
              <!-- allow-runtime-binding-but-not-invoke prevents 
              a fail in PropertiesHaveSettersTest. The property allows value bindings
              because there may be existing pages where the value is computed,
              but the property in the xpage source is no used at runtime,
              and the value binding is not invoked. -->
              <tags>
                 allow-runtime-binding-but-not-invoke
              </tags>
            </designer-extension>
          </property-extension>
        </property>
            

        <component-extension>
            <component-family>javax.faces.Input</component-family>
            <base-component-type>com.ibm.xsp.UIInputEx</base-component-type>
            <designer-extension>
                <!-- TODO Update existing renderers for showreadonlyasdisabled -->
                <tags>
                    todo
                </tags>
            </designer-extension>
        </component-extension>
    </component>


    <!-- Start of Dojo Form Controls -->
    <component>
        <description>A basic input field that inherits from the Dojo theme</description>
        <display-name>Dojo Text Box</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoTextBox_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoTextBox_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.TextBox</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoTextBox</component-class>

        <property>
            <description>Remove leading and trailing whitespace</description>
            <display-name>Trim Spaces</display-name>
            <property-name>trim</property-name>
            <property-class>boolean</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Converts the text to upper case</description>
            <display-name>Upper Case</display-name>
            <property-name>uppercase</property-name>
            <property-class>boolean</property-class>
            <property-extension>
                <designer-extension>
                    <category>format</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Converts the text to lower case</description>
            <display-name>Lower Case</display-name>
            <property-name>lowercase</property-name>
            <property-class>boolean</property-class>
            <property-extension>
                <designer-extension>
                    <category>format</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Converts the first character of each word to upper case</description>
            <display-name>Proper Case</display-name>
            <property-name>propercase</property-name>
            <property-class>boolean</property-class>
            <property-extension>
                <designer-extension>
                    <category>format</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Used for passing through the standard HTML "input" element property "maxlength".</description>
            <display-name>Maximum Length</display-name>
            <property-name>maxLength</property-name>
            <property-class>int</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.FormWidgetBase</base-component-type>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.TextBox</renderer-type>
            <tag-name>djTextBox</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
                <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
    &lt;xp:inputText id="inputText1" value="&lt;%=this.value?this.value:''%&gt;"&gt;&lt;/xp:inputText&gt;&#xd;
&lt;/xp:view&gt;&#xd;
</render-markup>
            </designer-extension>
        </component-extension>
    </component>

    <component>
        <description>A text box control that allows validation based on a Regular Expression or based on a client-side JavaScript function. An error will appear if value in the text box fails validation.</description>
        <display-name>Dojo Validation Text Box</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoValidationTextBox_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoValidationTextBox_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.ValidationTextBox</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoValidationTextBox</component-class>

<!-- "required" is already defined as part of the std JSF UIInput control
        <property>
            <description>Property that determines whether the field is required. If left empty when this property is set, the field cannot be valid. false by default.</description>
            <display-name>Required</display-name>
            <property-name>required</property-name>
            <property-class>boolean</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>
  -->
  
        <property>
            <description>Property used to define a hint for the field when the field has the cursor.</description>
            <display-name>Prompt Message</display-name>
            <property-name>promptMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <localizable>true</localizable>
                <designer-extension>
                    <category>data</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Property that provides the message to display if the field is invalid</description>
            <display-name>Invalid Message</display-name>
            <property-name>invalidMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <localizable>true</localizable>
                <designer-extension>
                    <category>data</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Property that provides a regular expression to be used for validation. Do not define this property if "regExpGen" is defined. If omitted, by default this property is ".*" (a regular expression that allows everything).</description>
            <display-name>Regular Expression</display-name>
            <property-name>regExp</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <category>data</category>
                    <editor>com.ibm.xsp.extlib.designer.tooling.editor.RegularExpressionEditor</editor>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Property that denotes an overridable function used to generate a regular expression that is dependent upon the key value pairs in the "constraints" property, useful for dynamic situations. Do not define this property if "regExp" is defined.</description>
            <display-name>Regular Expression Generator</display-name>
            <property-name>regExpGen</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <category>data</category>
                    <editor>com.ibm.designer.domino.client.script.editor</editor>
                </designer-extension>   
            </property-extension>
        </property>
        
        <property>
            <description>Property used to specify the position of the tooltip relative to the control.</description>
            <display-name>Tooltip Position</display-name>
            <property-name>tooltipPosition</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <category>format</category>
                    <editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
                    <editor-parameter>
                        auto
                        before
                        after
                        above
                        below
                        top
                        bottom
                    </editor-parameter>
                    <tags>
                        not-localizable
                    </tags>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Defines an overridable function used to validate the input.</description>
            <display-name>Validator Extension</display-name>
            <property-name>validatorExt</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                    <editor>com.ibm.designer.domino.client.script.editor</editor>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Defines an overridable function to customize the display of Dojo validation errors or hints.</description>
            <display-name>Display Message Extension</display-name>
            <property-name>displayMessageExt</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <category>format</category>
                    <editor>com.ibm.designer.domino.client.script.editor</editor>
                    <tags>
                        not-localizable
                    </tags>
                </designer-extension>
            </property-extension>
        </property>

        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.TextBox</base-component-type>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.ValidationTextBox</renderer-type>
            <tag-name>djValidationTextBox</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
        <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
    &lt;xp:inputText id="inputText1" value="&lt;%=this.value?this.value:''%&gt;"&gt;&#xd;
        &lt;xp:this.converter&gt;&#xd;
            &lt;xp:convertMask&gt;&lt;/xp:convertMask&gt;&#xd;
        &lt;/xp:this.converter&gt;&#xd;
    &lt;/xp:inputText&gt;&#xd;
&lt;/xp:view&gt;&#xd;
</render-markup>
                <!-- TODO from the dojo site:
                "Base class for textbox widgets with the ability to validate content of various types and provide user feedback."
                which would imply that this is an abstract class that should not have a tag-name,
                but it does seem to work OK as a regular expression validation text box -->
                <tags>
                    todo
                </tags>
            </designer-extension>
        </component-extension>
    </component>

    <component>
        <description>A base class for a Dojo mapped text box, that is a text box where the value displayed to the user is different from the value sent to the server. Usually the value sent to the server is locale independent.</description>
        <display-name>Dojo Mapped Text Box</display-name>
        <component-type>com.ibm.xsp.extlib.dojo.form.MappedTextBox</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoMappedTextBox</component-class>

        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.ValidationTextBox</base-component-type>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.ValidationTextBox</renderer-type>
            <component-family>javax.faces.Input</component-family>
        </component-extension>
    </component>

    <component>
        <description>A base class for a Dojo range bound text box, that is a text box where the value is within a range of valid values</description>
        <display-name>Dojo Range Bound Text Box</display-name>
        <component-type>com.ibm.xsp.extlib.dojo.form.RangeBoundTextBox</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoRangeBoundTextBox</component-class>

        <property>
            <description>The message to display if value is out of range.</description>
            <display-name>Range Invalid Message</display-name>
            <property-name>rangeMessage</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <localizable>true</localizable>
                <designer-extension>
                    <category>data</category>
                </designer-extension>
            </property-extension>
        </property>

        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.MappedTextBox</base-component-type>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.ValidationTextBox</renderer-type>
            <component-family>javax.faces.Input</component-family>
        </component-extension>
    </component>

    <component>
        <description>An input field that will format numbers based on the locale, e.g. adding commas or decimals for the thousands separator</description>
        <display-name>Dojo Number Text Box</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoNumberTextBox_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoNumberTextBox_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.NumberTextBox</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoNumberTextBox</component-class>

        <property>
            <!-- # "double" should not be translated -->
            <description>Specifies the Java numeric type of the converted value returned by the server-side converter. If omitted, "double" is used by default.</description>
            <display-name>Number Type</display-name>
            <property-name>javaType</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <category>data</category>
                    <editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
                    <editor-parameter>
                        byte
                        short
                        int
                        long
                        float
                        double
                    </editor-parameter>
                </designer-extension>
            </property-extension>
        </property>

        <property>
          <description>Specifies the number constraints</description>
          <display-name>Constraints</display-name>
          <property-name>constraints</property-name>
          <property-class>com.ibm.xsp.extlib.component.dojo.form.constraints.NumberConstraints</property-class>
          <property-extension>
            <allow-run-time-binding>false</allow-run-time-binding>
            <designer-extension>
                    <category>data</category>
                    <!-- TODO ApprovedBreakingChange Should be exposed by UIDojoValidationTextBox -->
                    <tags>
                        todo
                    </tags>
            </designer-extension>
          </property-extension>
        </property>

        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.RangeBoundTextBox</base-component-type>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.NumberTextBox</renderer-type>
            <tag-name>djNumberTextBox</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
        <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
    &lt;xp:inputText id="inputText1" value="&lt;%=this.value?this.value:''%&gt;"&gt;&#xd;
        &lt;xp:this.converter&gt;&#xd;
            &lt;xp:convertNumber type="number"&gt;&lt;/xp:convertNumber&gt;&#xd;
        &lt;/xp:this.converter&gt;&#xd;
    &lt;/xp:inputText&gt;&#xd;
&lt;/xp:view&gt;&#xd;
</render-markup>
            </designer-extension>
        </component-extension>
    </component>

    <component>
        <description>Similar to the Dojo Number Text Box but with up and down arrows to increase or decrease the value</description>
        <display-name>Dojo Number Spinner</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoSpinnerTextBox_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoSpinnerTextBox_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.NumberSpinner</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoNumberSpinner</component-class>

        <property>
          <description>The number of milliseconds a key or button is held down before it becomes typematic. If omitted, 500 by default.</description>
          <display-name>Default Timeout</display-name>
          <property-name>defaultTimeout</property-name>
          <property-class>int</property-class>
          <property-extension>
            <designer-extension>
                    <category>basics</category>
            </designer-extension>
          </property-extension>
        </property>

        <property>
          <!-- # "defaultTimeout" should not be translated -->
          <description>The fraction of time that is used to change the typematic timer between events. A value of 1.0 means that each typematic event fires at intervals as specified by the "defaultTimeout" property. A value of less than 1.0 means that each typematic event fires an increasing faster rate. If omitted, this property is 0.90 by default.</description>
          <display-name>Timeout Change Rate</display-name>
          <property-name>timeoutChangeRate</property-name>
          <property-class>double</property-class>
          <property-extension>
            <designer-extension>
                    <category>basics</category>
            </designer-extension>
          </property-extension>
        </property>

        <property>
          <description>The value to adjust the spinner by when using the arrow keys or buttons. If omitted, this property is "1" by default.</description>
          <display-name>Small Delta</display-name>
          <property-name>smallDelta</property-name>
          <property-class>double</property-class>
          <property-extension>
            <designer-extension>
                    <category>data</category>
            </designer-extension>
          </property-extension>
        </property>

        <property>
          <description>The value to adjust the spinner by when using the Page Up and Page Down keys. If omitted, this property is "10" by default.</description>
          <display-name>Large Delta</display-name>
          <property-name>largeDelta</property-name>
          <property-class>double</property-class>
          <property-extension>
            <designer-extension>
                    <category>data</category>
            </designer-extension>
          </property-extension>
        </property>

        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.NumberTextBox</base-component-type>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.NumberSpinner</renderer-type>
            <tag-name>djNumberSpinner</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
        <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
    &lt;xp:inputText id="inputText1" value="&lt;%=this.value?this.value:''%&gt;"&gt;&#xd;
        &lt;xp:this.converter&gt;&#xd;
            &lt;xp:convertNumber type="number"&gt;&lt;/xp:convertNumber&gt;&#xd;
        &lt;/xp:this.converter&gt;&#xd;
    &lt;/xp:inputText&gt;&#xd;
&lt;/xp:view&gt;&#xd;
</render-markup>
                <!-- TODO ApprovedBreakingChange Hierarchy deviation between ExtLib and Dojo, RangeBoundTextBox is the parent of NumberSpinner -->
                <tags>
                    todo
                </tags>
            </designer-extension>
        </component-extension>
    </component>

    <component>
        <description>Inherits from the numberTextBox but used for entering monetary values with a currency symbol</description>
        <display-name>Dojo Currency Text Box</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoCurrencyTextBox_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoCurrencyTextBox_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.CurrencyTextBox</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoCurrencyTextBox</component-class>

        <property>
          <description>Specifies the currency constraints</description>
          <display-name>Constraints</display-name>
          <property-name>constraints</property-name>
          <property-class>com.ibm.xsp.extlib.component.dojo.form.constraints.NumberConstraints</property-class>
          <property-extension>
            <allow-run-time-binding>false</allow-run-time-binding>
            <designer-extension>
                    <category>data</category>
            </designer-extension>
          </property-extension>
        </property>

        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.RangeBoundTextBox</base-component-type>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.CurrencyTextBox</renderer-type>
            <component-family>javax.faces.Input</component-family>
            <tag-name>djCurrencyTextBox</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
        <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
    &lt;xp:inputText id="inputText1" value="&lt;%=this.value?this.value:''%&gt;"&gt;&#xd;
        &lt;xp:this.converter&gt;&#xd;
            &lt;xp:convertNumber type="number"&gt;&lt;/xp:convertNumber&gt;&#xd;
        &lt;/xp:this.converter&gt;&#xd;
    &lt;/xp:inputText&gt;&#xd;
&lt;/xp:view&gt;&#xd;
</render-markup>
                <!-- TODO ProposedBreakingChange Hierarchy deviation between ExtLib and Dojo, NumberTextBox is the parent of CurrencyTextBox -->
                <tags>
                    todo
                </tags>
            </designer-extension>
        </component-extension>
    </component>

    <component>
        <description>An input field that allows a user to type or choose a date from a calendar widget</description>
        <display-name>Dojo Date Text Box</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoDateTextBox_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoDateTextBox_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.DateTextBox</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoDateTextBox</component-class>

        <property>
          <description>Specifies the date constraints</description>
          <display-name>Constraints</display-name>
          <property-name>constraints</property-name>
          <property-class>com.ibm.xsp.extlib.component.dojo.form.constraints.DateTimeConstraints</property-class>
          <property-extension>
            <allow-run-time-binding>false</allow-run-time-binding>
            <designer-extension>
                    <category>data</category>
            </designer-extension>
          </property-extension>
        </property>

        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.RangeBoundTextBox</base-component-type>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.DateTextBox</renderer-type>
            <tag-name>djDateTextBox</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
        <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
    &lt;xp:inputText id="inputText1" value="&lt;%=this.value?this.value:''%&gt;"&gt;&#xd;
        &lt;xp:this.converter&gt;&#xd;
            &lt;xp:convertDateTime type="date"&gt;&lt;/xp:convertDateTime&gt;&#xd;
        &lt;/xp:this.converter&gt;&#xd;
    &lt;/xp:inputText&gt;&#xd;
&lt;/xp:view&gt;&#xd;
</render-markup>
            </designer-extension>
        </component-extension>
    </component>

    <component>
        <description>An input field that allows a user to type or choose a time from a calendar widget</description>
        <display-name>Dojo Time Text Box</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoTimeTextBox_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoTimeTextBox_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.TimeTextBox</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoTimeTextBox</component-class>

        <property>
          <description>Specifies the time constraints</description>
          <display-name>Constraints</display-name>
          <property-name>constraints</property-name>
          <property-class>com.ibm.xsp.extlib.component.dojo.form.constraints.DateTimeConstraints</property-class>
          <property-extension>
            <allow-run-time-binding>false</allow-run-time-binding>
            <designer-extension>
                    <category>data</category>
            </designer-extension>
          </property-extension>
        </property>

        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.RangeBoundTextBox</base-component-type>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.TimeTextBox</renderer-type>
            <tag-name>djTimeTextBox</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
        <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
    &lt;xp:inputText id="inputText1" value="&lt;%=this.value?this.value:''%&gt;"&gt;&#xd;
        &lt;xp:this.converter&gt;&#xd;
            &lt;xp:convertDateTime type="date"&gt;&lt;/xp:convertDateTime&gt;&#xd;
        &lt;/xp:this.converter&gt;&#xd;
    &lt;/xp:inputText&gt;&#xd;
&lt;/xp:view&gt;&#xd;
</render-markup>
            </designer-extension>
        </component-extension>
    </component>

    <component>
        <description>The Dojo Combo Box control provides a list of acceptable values to choose from but also permits user input and displays partially matched values.</description>
        <display-name>Dojo Combo Box</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoComboBox_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoComboBox_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.ComboBox</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoComboBox</component-class>

        <property>
          <!-- # "count" should not be translated -->
          <description>Specifies the number of results per page (via the "count" key when making a fetch request from a data provider). Useful when querying large data stores. If omitted, this is infinite by default.</description>
          <display-name>Page Size</display-name>
          <property-name>pageSize</property-name>
          <property-class>int</property-class>
          <property-extension>
            <designer-extension>
                    <category>data</category>
            </designer-extension>
          </property-extension>
        </property>

        <property>
          <description>Specifies a reference to a Dojo Store compatible data provider.</description>
          <display-name>Dojo Store</display-name>
          <property-name>store</property-name>
          <property-class>java.lang.String</property-class>
          <property-extension>
            <designer-extension>
                    <category>data</category>
            </designer-extension>
          </property-extension>
        </property>

        <property>
          <description>When the control loses focus whether to automatically select the first value from the list of drop-down options populated based on the partial text entered. If omitted, true by default.</description>
          <display-name>Automatically Complete</display-name>
          <property-name>autoComplete</property-name>
          <property-class>boolean</property-class>
          <property-extension>
            <designer-extension>
                    <category>basics</category>
            </designer-extension>
          </property-extension>
        </property>

        <property>
          <description>How many milliseconds to wait between when a key is pressed and when to start searching for that value. If omitted, 100 by default.</description>
          <display-name>Search Delay</display-name>
          <property-name>searchDelay</property-name>
          <property-class>int</property-class>
          <property-extension>
            <designer-extension>
                    <category>basics</category>
            </designer-extension>
          </property-extension>
        </property>

        <property>
          <description>The search pattern to match against for the values that should be displayed.</description>
          <display-name>Search Attribute</display-name>
          <property-name>searchAttr</property-name>
          <property-class>java.lang.String</property-class>
          <property-extension>
            <designer-extension>
                <category>basics</category>
            </designer-extension>
          </property-extension>
        </property>

        <property>
          <description>The Dojo Data query expression pattern to use. The default expression searches for any value that is a prefix of the current value that is typed in.</description>
          <display-name>Query Expression</display-name>
          <property-name>queryExpr</property-name>
          <property-class>java.lang.String</property-class>
          <property-extension>
            <designer-extension>
                <category>basics</category>
            </designer-extension>
          </property-extension>
        </property>

        <property>
          <description>Whether queries should be case sensitive. By default case is ignored.</description>
          <display-name>Ignore Case</display-name>
          <property-name>ignoreCase</property-name>
          <property-class>boolean</property-class>
          <property-extension>
            <designer-extension>
                    <category>basics</category>
            </designer-extension>
          </property-extension>
        </property>

        <property>
          <description>Whether to display the down arrow button, which can be clicked to display the list of options. The down arrow is present by default.</description>
          <display-name>Has Down Arrow</display-name>
          <property-name>hasDownArrow</property-name>
          <property-class>boolean</property-class>
          <property-extension>
            <default-value>true</default-value>
            <designer-extension>
                    <category>basics</category>
            </designer-extension>
          </property-extension>
        </property>
        
        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.ValidationTextBox</base-component-type>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.ComboBox</renderer-type>
            <tag-name>djComboBox</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
        <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
    &lt;xp:comboBox id="comboBox1" value="&lt;%=this.value?this.value:''%&gt;"&gt;&lt;/xp:comboBox&gt;&#xd;
&lt;/xp:view&gt;&#xd;
</render-markup>
                <!-- TODO Investigate support for extlib data stores as well as dojo data stores (see martin) -->
                <!-- TODO Potential new data store control creation required -->
                <!-- TODO Addition of new property for storeComponentId to reference to newly created data store -->
                <tags>
                    todo
                </tags>
            </designer-extension>
        </component-extension>
    </component>
    
    <component>
        <description>The Dojo Filtering Select control provides a list of acceptable value pairs to choose from. A value pair consists of the text to be displayed to the user and the value to be sent to the server when the form is submitted. Additionally, this control also permits user input however unmatched values are not submitted.</description>
        <display-name>Dojo Filtering Select</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoFilteringSelect_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoFilteringSelect_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.FilteringSelect</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoFilteringSelect</component-class>

        <property>
          <description>Specifies the field name for an item from the data store to be used as the entries in the drop-down list. If not specified then the "searchAttr" property is used instead.</description>
          <display-name>Label Attribute</display-name>
          <property-name>labelAttr</property-name>
          <property-class>java.lang.String</property-class>
          <property-extension>
              <designer-extension>
                <category>format</category>
                <tags>
                    not-localizable
                </tags>
              </designer-extension>
          </property-extension>
        </property>

        <property>
          <description>Specifies whether to interpret the "labelAttr" property as "text" (Plain text) or "html" (HTML Markup).</description>
          <display-name>Label Type</display-name>
          <property-name>labelType</property-name>
          <property-class>java.lang.String</property-class>
          <property-extension>
              <designer-extension>
                <category>format</category>
                <editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
                <editor-parameter>
                    text
                    html
                </editor-parameter>
                <!-- TODO Support for ACF required? [note, the label is retrieved from the item client-side.]-->
                <!-- TODO Property required htmlFilter, htmlFilterIn -->
                <tags>
                    not-localizable
                    todo
                </tags>
              </designer-extension>
          </property-extension>
        </property>

        <property>
          <description>The event handler that is called when the label changes; returns the label that should be displayed.</description>
          <display-name>Label Function</display-name>
          <property-name>labelFunc</property-name>
          <property-class>java.lang.String</property-class>
          <property-extension>
                <designer-extension>
                    <category>format</category>
                    <tags>
                        not-localizable
                        todo
                    </tags>
                </designer-extension>   
          </property-extension>
        </property>
        
        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.ComboBox</base-component-type>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.FilteringSelect</renderer-type>
            <tag-name>djFilteringSelect</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
        <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
    &lt;xp:comboBox id="comboBox1" value="&lt;%=this.value?this.value:''%&gt;"&gt;&lt;/xp:comboBox&gt;&#xd;
&lt;/xp:view&gt;&#xd;
</render-markup>
                <!-- TODO ApprovedBreakingChange Hierarchy deviation between ExtLib and Dojo, MappedTextBox is the parent of FilteringSelect -->
                <tags>
                    todo
                </tags>
            </designer-extension>
        </component-extension>
    </component>
    
    <component>
        <description>Similar to a HTML TEXTAREA, but will dynamically resize to fit the content of the text inside</description>
        <display-name>Dojo Text Area</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoTextarea_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoTextarea_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.Textarea</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoTextarea</component-class>

        <property>
          <description>Specifies the number of text characters per line to be displayed</description>
          <display-name>Columns</display-name>
          <property-name>cols</property-name>
          <property-class>int</property-class>
          <property-extension>
              <designer-extension>
                  <category>format</category>
              </designer-extension>
          </property-extension>
        </property>
        
        <property>
          <description>Specifies the number of lines of text to be displayed</description>
          <display-name>Rows</display-name>
          <property-name>rows</property-name>
          <property-class>int</property-class>
          <property-extension>
              <designer-extension>
                  <category>format</category>
              </designer-extension>
          </property-extension>
        </property>
        
        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.TextBox</base-component-type>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.Textarea</renderer-type>
            <tag-name>djTextarea</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
        <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
    &lt;xp:inputTextarea id="inputTextarea1" value="&lt;%=this.value?this.value:''%&gt;"&gt;&lt;/xp:inputTextarea&gt;&#xd;
&lt;/xp:view&gt;&#xd;
</render-markup>
                <!-- TODO ApprovedBreakingChange Hierarchy deviation between ExtLib and Dojo, SimpleTextarea is the parent of Textarea -->
                <tags>
                    todo
                </tags>
            </designer-extension>
        </component-extension>
    </component>
    
    <component>
        <description>A thin wrapper around the standard HTML TEXTAREA</description>
        <display-name>Dojo Simple Text Area</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoSimpleTextArea_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoSimpleTextArea_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.SimpleTextarea</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoSimpleTextarea</component-class>
        
        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.Textarea</base-component-type>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.SimpleTextarea</renderer-type>
            <tag-name>djSimpleTextarea</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
        <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
    &lt;xp:inputTextarea id="inputTextarea1" value="&lt;%=this.value?this.value:''%&gt;"&gt;&lt;/xp:inputTextarea&gt;&#xd;
&lt;/xp:view&gt;&#xd;
</render-markup>
                <!-- TODO ApprovedBreakingChange Hierarchy deviation between ExtLib and Dojo, SimpleTextarea is the parent of Textarea -->
                <tags>
                    todo
                </tags>
            </designer-extension>
        </component-extension>
    </component>

    <component>
        <!-- # The values in quotes should not be translated -->
        <description>The Dojo version of the HTML "button" element or the "input" element with the "type" attribute set to "submit", "reset", or "button"</description>
        <display-name>Dojo Button</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoButton_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoButton_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.Button</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoButton</component-class>

        <property>
            <description>Used to provide the label text that appears on the button</description>
            <display-name>Label</display-name>
            <property-name>label</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <localizable>true</localizable>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>
        
        <property>
            <!-- # "true" should not be translated -->
            <description>Indicates whether to display the text label on the Button, "true" by default</description>
            <display-name>Show Label</display-name>
            <property-name>showLabel</property-name>
            <property-class>boolean</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>
        
        <property>
            <description>A style class specifying an image that can make a button appear like an icon</description>
            <display-name>Icon Class</display-name>
            <property-name>iconClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <category>styling</category>
                    <editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
                    <!-- This is tagged not-image-path because it is a styleClass,
                    not a path to an image resource, so the image JUnit test should not complain. -->
                    <tags>
                       not-image-path
                    </tags>
                </designer-extension>
            </property-extension>
        </property>

        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.FormWidgetBase</base-component-type>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.Button</renderer-type>
            <tag-name>djButton</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
        <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
    &lt;xp:button value="&lt;%=this.label?this.label:''%&gt;" id="button1"&gt;&lt;/xp:button&gt;&#xd;
&lt;/xp:view&gt;&#xd;
</render-markup>
                <!-- TODO NonBreakingChange faces-config Button.ReadOnly renderer required -->
                <tags>
                    todo
                </tags>
            </designer-extension>
        </component-extension>
    </component>
    
    <component>
        <description>A cross between a button and a check box. It displays as a button but allows the user to toggle between two states.</description>
        <display-name>Dojo Toggle Button</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoToggleButton_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoToggleButton_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.ToggleButton</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoToggleButton</component-class>

        <property>
            <description>Specifies the object saved to the value property when the toggle button is checked</description>
            <display-name>Checked Value</display-name>
            <property-name>checkedValue</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <designer-extension>
                    <category>data</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Specifies the object saved to the value property when the toggle button is unchecked</description>
            <display-name>Unchecked Value</display-name>
            <property-name>uncheckedValue</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <designer-extension>
                    <category>data</category>
                </designer-extension>
            </property-extension>
        </property>
        
        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.Button</base-component-type>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.ToggleButton</renderer-type>
            <tag-name>djToggleButton</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
                <!-- TODO NonBreakingChange faces-config ToggleButton.ReadOnly renderer required -->
                <tags>
                    todo
                </tags>
            </designer-extension>
        </component-extension>
    </component>
    
    <component>
        <description>Similar to the HTML check box but with styling provided by Dojo</description>
        <display-name>Dojo Check Box</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoCheckBox_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoCheckBox_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.CheckBox</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoCheckBox</component-class>

        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.ToggleButton</base-component-type>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.CheckBox</renderer-type>
            <tag-name>djCheckBox</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
        <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
    &lt;xp:checkBox id="checkBox1" text="&lt;%=this.label?this.label:''%&gt;"&gt;&lt;/xp:checkBox&gt;&#xd;
&lt;/xp:view&gt;&#xd;
</render-markup>
            </designer-extension>
        </component-extension>
    </component>
    
    <component>
        <description>Similar to the HTML radioButton</description>
        <display-name>Dojo Radio Button</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoRadioButton_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoRadioButton_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.RadioButton</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoRadioButton</component-class>

        <property>
            <description>Specifies the value when the radio button is selected</description>
            <display-name>Selected Value</display-name>
            <property-name>selectedValue</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <designer-extension>
                    <category>data</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Name of the group of radio buttons</description>
            <display-name>Group Name</display-name>
            <property-name>groupName</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <category>data</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Number of naming containers to skip when computing the name property</description>
            <display-name>Skip Containers</display-name>
            <property-name>skipContainers</property-name>
            <property-class>int</property-class>
            <property-extension>
                <designer-extension>
                    <category>data</category>
                </designer-extension>
            </property-extension>
        </property>
        
        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.Button</base-component-type>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.RadioButton</renderer-type>
            <tag-name>djRadioButton</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
        <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
    &lt;xp:radio id="radio1" text="&lt;%=this.label?this.label:''%&gt;"&gt;&lt;/xp:radio&gt;&#xd;
&lt;/xp:view&gt;&#xd;
</render-markup>
                <!-- TODO ApprovedBreakingChange Hierarchy deviation between ExtLib and Dojo, CheckBox is the parent of RadioButton -->
                <tags>
                    todo
                </tags>
            </designer-extension>
        </component-extension>
    </component>

    <component>
        <description>The base class for the vertical and horizontal slider controls</description>
        <display-name>Dojo Base Slider</display-name>
        <component-type>com.ibm.xsp.extlib.dojo.form.SliderBase</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoSliderBase</component-class>

        <property>
            <description>Whether to show increment and decrement buttons on each end of the slider, "true" by default</description>
            <display-name>Show Buttons</display-name>
            <property-name>showButtons</property-name>
            <property-class>boolean</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>The minimum value allowed, 0 by default</description>
            <display-name>Minimum</display-name>
            <property-name>minimum</property-name>
            <property-class>int</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>The maximum value allowed, 100 by default</description>
            <display-name>Maximum</display-name>
            <property-name>maximum</property-name>
            <property-class>int</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>The number of discrete value between the minimum and maximum properties inclusively.</description>
            <display-name>Discrete Values</display-name>
            <property-name>discreteValues</property-name>
            <property-class>int</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>The amount of adjustment to nudge the slider via the page up and page down keys. 2 by default</description>
            <display-name>Page Increment</display-name>
            <property-name>pageIncrement</property-name>
            <property-class>int</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Specifies whether clicking the slider bar causes the value to change to the clicked location. true by default</description>
            <display-name>Click Select</display-name>
            <property-name>clickSelect</property-name>
            <property-class>boolean</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>The time in milliseconds to take to slide the handle from 0% to 100%. Useful for programmatically changing slider values. 1000 by default</description>
            <display-name>Slide Duration</display-name>
            <property-name>slideDuration</property-name>
            <property-class>double</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.FormWidgetBase</base-component-type>
            <component-family>javax.faces.Input</component-family>
        </component-extension>
    </component>

    <component>
        <description>A slider that allows you to drag left or right to select a value from a range.</description>
        <display-name>Dojo Horizontal Slider</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoHorizontalSlider_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoHorizontalSlider_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.HorizontalSlider</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoHorizontalSlider</component-class>

        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.SliderBase</base-component-type>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.HorizontalSlider</renderer-type>
            <tag-name>djHorizontalSlider</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
        <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
    &lt;xp:image url="extlib/designer/markup/DojoHorizontalSlider.jpg" id="image1"&gt;&lt;/xp:image&gt;&#xd;
&lt;/xp:view&gt;&#xd;
</render-markup>
            </designer-extension>
        </component-extension>
    </component>

    <component>
        <description>A slider that allows you to drag up or down to select a value from a range.</description>
        <display-name>Dojo Vertical Slider</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoVerticalSlider_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoVerticalSlider_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.VerticalSlider</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoVerticalSlider</component-class>

        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.SliderBase</base-component-type>
            <component-family>javax.faces.Input</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.VerticalSlider</renderer-type>
            <tag-name>djVerticalSlider</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
        <render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
    &lt;xp:image url="/extlib/designer/markup/DojoVerticalSlider.jpg" id="image1"&gt;&lt;/xp:image&gt;&#xd;
&lt;/xp:view&gt;&#xd;
</render-markup>
            </designer-extension>
        </component-extension>
    </component>

    <component>
        <description>Adds labels to the rule for a horizontal or vertical slider.</description>
        <display-name>Dojo Slider Rule</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoSliderRule_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoSliderRule_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.SliderRule</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoSliderRule</component-class>

        <property>
            <description>Specifies the CSS style rules to apply to individual hash marks</description>
            <display-name>Rule Style</display-name>
            <property-name>ruleStyle</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <category>styling</category>
                    <editor>com.ibm.workplace.designer.property.editors.StylesEditor</editor>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Specifies the number of hash marks to generate. If omitted, this value is 3 by default</description>
            <display-name>Count</display-name>
            <property-name>count</property-name>
            <property-class>int</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Where to apply the label in relation to the slider: "topDecoration" or "bottomDecoration" for Horizontal Slider control. "leftDecoration" or "rightDecoration" for Vertical Slider control.</description>
            <display-name>Container</display-name>
            <property-name>container</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <category>format</category>
                    <editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
                    <editor-parameter>
                        topDecoration
                        bottomDecoration
                        leftDecoration
                        rightDecoration
                    </editor-parameter>
                </designer-extension>
            </property-extension>
        </property>

        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.Widget</base-component-type>
            <component-family>com.ibm.xsp.extlib.dojo.form.SliderRule</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.SliderRule</renderer-type>
            <tag-name>djSliderRule</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
            </designer-extension>
        </component-extension>
    </component>

    <complex-type>
        <description>A localizable label associated with the labels list property of a Dojo Slider Rule Labels control</description>
        <display-name>Dojo Slider Rule Label</display-name>
        <complex-id>com.ibm.xsp.extlib.dojo.form.SliderRuleLabel</complex-id>
        <complex-class>com.ibm.xsp.extlib.dojo.form.SliderRuleLabel</complex-class>

        <property>
            <description>Specifies a localizable text label</description>
            <display-name>Localizable Label</display-name>
            <property-name>label</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <localizable>true</localizable>
            </property-extension>
        </property>

        <complex-extension>
            <tag-name>djSliderRuleLabel</tag-name>
        </complex-extension>
    </complex-type>

    <component>
        <description>Adds a list of labels to be displayed either vertically or horizontally along the slider</description>
        <display-name>Dojo Slider Rule Labels</display-name>
        <icon>
            <small-icon>extlib/designer/icons/DojoSliderRuleLabels_16.png</small-icon>
            <large-icon>extlib/designer/icons/DojoSliderRuleLabels_24.png</large-icon>
        </icon>
        <component-type>com.ibm.xsp.extlib.dojo.form.SliderRuleLabels</component-type>
        <component-class>com.ibm.xsp.extlib.component.dojo.form.UIDojoSliderRuleLabels</component-class>

        <property>
            <description>Specifies the CSS style rules to apply to individual text labels</description>
            <display-name>Label Style</display-name>
            <property-name>labelStyle</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <category>styling</category>
                    <editor>com.ibm.workplace.designer.property.editors.StylesEditor</editor>
                    <!-- TODO UnitTest If name contains class or ends with style throw query to confirm -->
                    <tags>
                        todo
                        not-localizable
                    </tags>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Specifies a list of text labels to display evenly spaced from left-to-right or top-to-bottom.</description>
            <display-name>Labels</display-name>
            <property-name>labels</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                    <editor>com.ibm.designer.domino.client.script.editor</editor>
                    <tags>
                        not-localizable
                    </tags>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>Specifies a list of localizable text labels</description>
            <display-name>Labels List</display-name>
            <property-name>labelsList</property-name>
            <property-class>java.util.List</property-class>
            <property-extension>
                <collection-property>true</collection-property>
                <property-item-class>com.ibm.xsp.extlib.dojo.form.SliderRuleLabel</property-item-class>
                <property-add-method>addLabel</property-add-method>
                <allow-run-time-binding>false</allow-run-time-binding>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>The number of numeric labels that should be omitted from display on each end of the slider. (Useful for omitting obvious start and end values such as 0, the default, and 100.)</description>
            <display-name>Numeric Margin</display-name>
            <property-name>numericMargin</property-name>
            <property-class>int</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>When the "labels" property is not specified, this property specifies the minimum label value for generated numeric labels. If omitted, this value is 0 by default.</description>
            <display-name>Minimum</display-name>
            <property-name>minimum</property-name>
            <property-class>int</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>When the "labels" property is not specified, this property specifies the maximum label value for generated numeric labels. If omitted, this value is 1 by default.</description>
            <display-name>Maximum</display-name>
            <property-name>maximum</property-name>
            <property-class>int</property-class>
            <property-extension>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

        <property>
            <description>When the "labels" property is not specified, this property specifies the options used for formatting of the generated numeric labels.</description>
            <display-name>Constraints</display-name>
            <property-name>constraints</property-name>
            <property-class>com.ibm.xsp.extlib.component.dojo.form.constraints.NumberConstraints</property-class>
            <property-extension>
                <allow-run-time-binding>false</allow-run-time-binding>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

        <component-extension>
            <base-component-type>com.ibm.xsp.extlib.dojo.form.SliderRule</base-component-type>
            <component-family>com.ibm.xsp.extlib.dojo.form.SliderRuleLabels</component-family>
            <renderer-type>com.ibm.xsp.extlib.dojo.form.SliderRuleLabels</renderer-type>
            <tag-name>djSliderRuleLabels</tag-name>
            <designer-extension>
                <in-palette>true</in-palette>
                <category>Dojo Form</category>
                <!-- TODO UnitTest component family and java inheritance for javax faces input and uicomponent -->
                <tags>
                   todo
                </tags>
            </designer-extension>
        </component-extension>
    </component>
    <!-- End of Dojo Form Controls -->

</faces-config>
