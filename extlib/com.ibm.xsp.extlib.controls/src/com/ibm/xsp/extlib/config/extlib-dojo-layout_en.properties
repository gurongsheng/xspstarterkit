# *****************************************************************
# /*
# * Copyright IBM Corp. 2010, 2013
# * 
# * Licensed under the Apache License, Version 2.0 (the "License"); 
# * you may not use this file except in compliance with the License. 
# * You may obtain a copy of the License at:
# * 
# * http://www.apache.org/licenses/LICENSE-2.0
# * 
# * Unless required by applicable law or agreed to in writing, software 
# * distributed under the License is distributed on an "AS IS" BASIS, 
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or 
# * implied. See the License for the specific language governing 
# * permissions and limitations under the License.
# */
# *****************************************************************
# DO NOT EDIT. THIS FILE IS GENERATED.
# NLS_ENCODING=UNICODE 
# NLS_MARKUP=IBMNJDK2 
# NLS_MESSAGEFORMAT_NONE
## G11N SA UI -- Special IT Audience resources follow
component.djContentPane.name= Dojo Content Pane
# "iframe" should not be translated, it is a technical term
component.djContentPane.descr= Similar to an iframe, the Content Pane will render any controls placed inside it and fits in with the Dojo theme.
property.href.name= Hypertext Reference URL
property.href.descr= Used to designate the external data the pane should load.
property.extractContent.name= Extract Content
# "BODY" should not be translated
property.extractContent.descr= If true, the visible content between the BODY tags of the document the Content Pane retrieves is extracted from it and placed into the pane. false by default.
property.parseOnLoad.name= Enable Parse On Load
property.parseOnLoad.descr= If true, any Dojo controls returned in the content area are automatically displayed. This is true by default.
property.preventCache.name= Prevent Cache
property.preventCache.descr= Acts just like the "preventCache" parameter for a Dojo "xhrGet" request. If true, an additional parameter is passed that changes with each request to prevent caching from occurring. false by default.
property.preload.name= Preload
property.preload.descr= Used to force the pane to load content, even if it is not initially visible. (If the node is styled with display:none then content may not load unless preload is set to true.) false by default.
property.refreshOnShow.name= Refresh On Show
property.refreshOnShow.descr= Used to indicate whether the pane should reload every time the pane goes from a hidden state to a visible state. false by default.
property.loadingMessage.name= Loading Message
# "Loading..." is translated in the Dojo translation memory, value here should reflect that
property.loadingMessage.descr= Provides a message to the user while a load is in process. "Loading..." by default.
property.errorMessage.name= Error Message
property.errorMessage.descr= Provides a message to the user when a load fails. "Sorry, an error occurred" by default.
property.onLoad.name= Load Script
property.onLoad.descr= JavaScript code executed after this control has been loaded and parsed
property.onUnload.name= Unload Script
property.onUnload.descr= JavaScript code executed before the content of this control is cleared
property.onDownloadStart.name= Download Start Script
property.onDownloadStart.descr= JavaScript code executed before a download starts and which returns a message to be displayed while loading
property.onContentError.name= Content Error Script
property.onContentError.descr= JavaScript code executed when an error occurs in the content of this control and which returns a message to be displayed
property.onDownloadError.name= Download Error Script
property.onDownloadError.descr= JavaScript code executed when error occurs during a download and which returns a message to be displayed
property.onDownloadEnd.name= Download End Script
property.onDownloadEnd.descr= JavaScript code executed when a download has completed
property.partialRefresh.name= Partial Refresh
property.partialRefresh.descr= Defines if the panel should use partial refresh to refresh its content. This is an XPages extension to the Dojo content pane.
component.djTabContainer.name= Tab Container
component.djTabContainer.descr= Contains multiple panes each with its own tab with a label, but only one will be showed at a time.
property.tabPosition.name= Tab Position
property.tabPosition.descr= This property determines the position of the tabs relative to the content area.
property.tabStrip.name= Tab Strip
property.tabStrip.descr= Defines whether the tab list gets an extra style class for layout or putting a border shading around the set of tabs
property.useMenu.name= Use Menu
property.useMenu.descr= True if a menu should be used to select tabs when they are too wide to fit the Tab Container, false otherwise
property.useSlider.name= Use Slider
property.useSlider.descr= True if a slider should be used to select tabs when they are too wide to fit the Tab Container, false otherwise
property.defaultTabContent.name= Default Tab Content
property.defaultTabContent.descr= Define the default content name when creating a new tab.
component.djTabPane.name= Tab Pane
component.djTabPane.descr= Each tab pane will be a new tab for the Tab Container and can have other controls placed on to it.
property.closable.name= Closable
property.closable.descr= Indicates whether the tab associated with the control has a close icon on it. By clicking the icon, the tab (and its contents) will be removed from the Tab Container.
property.tabUniqueKey.name= Tab Unique Key
property.tabUniqueKey.descr= Defines a unique value to identify this tab pane. This is used to identify a tab and select it instead of reopening a second instance if it already exists.
property.partialEvents.name= Partial Events
property.partialEvents.descr= Specify whether partial execute and partial refresh should be automatically applied to event within this tree. Defaults to false.
component.djStackContainer.name= Stack Container
component.djStackContainer.descr= A control with multiple children but only one will be displayed at a time. Similar to the tab container without the tabs.
property.selectedTab.component.djStackContainer.name= Selected Tab
property.selectedTab.component.djStackContainer.descr= Refers to the ID of the selected tab control
property.persist.component.djStackContainer.name= Persist
property.persist.component.djStackContainer.descr= Specifies whether to set a cookie to remember the selected child across sessions
property.doLayout.name= Do Layout
property.doLayout.descr= Used to change the size of the currently displayed child to match the container size, true by default.
component.djStackPane.name= Stack Pane
component.djStackPane.descr= Similar to the tab pane, it can display other controls and will be displayed by the stack container without a tab.
component.djBorderContainer.name= Border Container
component.djBorderContainer.descr= A container with up to five sections: left, right, top, bottom and a center which must be included.
property.design.name= Design
# "headline", "sidebar" should not be translated
property.design.descr= Specifies which layout design should be used, either "headline" or "sidebar". The "headline" design has the top and bottom regions span the full width of the container. The "sidebar" design has the left and right regions span the full height of the container.
property.gutters.name= Gutters
property.gutters.descr= Specifies whether to give each pane a border and margin.
property.liveSplitters.name= Live Splitters
property.liveSplitters.descr= Specifies whether splitters resize while being dragged. Otherwise, resize is performed when the splitter is dropped.
property.persist.component.djBorderContainer.name= Persist
property.persist.component.djBorderContainer.descr= Specifies whether to set a cookie to save splitter positions
component.djBorderPane.name= Border Pane
component.djBorderPane.descr= Similar to the tabbed pane, the border pane is used to hold additional controls and is display by the border container.
property.minSize.name= Minimum Size
property.minSize.descr= Specifies the minimum size of this control measured in pixels
property.maxSize.name= Maximum Size
property.maxSize.descr= Specifies the maximum size of this control measured in pixels
property.splitter.name= Splitter
property.splitter.descr= Specifies whether a splitter appears on the edge of the Border Pane so that resizing can occur.
property.region.name= Region
# "top", "bottom", "leading", "trailing", "left", "right", "center" should not be translated
property.region.descr= Specifies where to position this control within its parent container. Valid values include "top", "bottom", "left", "right", and "center". Values of "leading" and "trailing" are also possible and differ from "left" and "right" in that they are relative to the Bidirectional orientation.
property.layoutPriority.name= Layout Priority
property.layoutPriority.descr= Border Panes with a higher Layout Priority will be placed closer to the Border Container center than Border Panes with a lower Layout Priority.
component.djAccordionContainer.name= Accordion Container
component.djAccordionContainer.descr= Similar to the tab container, accordion container displays a list of panes and titles but only one is displayed at a time. When one is clicked it slides up to cover the previous displayed pane.
property.duration.name= Duration
property.duration.descr= Specifies the duration in number of milliseconds that it takes to slide between panes
property.selectedTab.component.djAccordionContainer.name= Selected Tab
property.selectedTab.component.djAccordionContainer.descr= Define the index of the selected tab.
component.djAccordionPane.name= Accordion Pane
component.djAccordionPane.descr= Similar to the tab pane, the accordion pane is used to hold other controls that will be displayed by the accordion container.
