<?xml version="1.0" encoding="UTF-8"?>
<!-- ******************************************************************* -->
<!--                                                                     -->
<!-- Â© Copyright IBM Corp. 2010, 2012                                    -->
<!--                                                                     -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");     -->
<!-- you may not use this file except in compliance with the License.    -->
<!-- You may obtain a copy of the License at:                            -->
<!--                                                                     -->
<!-- http://www.apache.org/licenses/LICENSE-2.0                          -->
<!--                                                                     -->
<!-- Unless required by applicable law or agreed to in writing, software -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,   -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or     -->
<!-- implied. See the License for the specific language governing        -->
<!-- permissions and limitations under the License.                      -->
<!--                                                                     -->
<!-- ******************************************************************* -->
<faces-config>

  	<faces-config-extension>
    	<namespace-uri>http://www.ibm.com/xsp/coreex</namespace-uri>
   		<default-prefix>xe</default-prefix>
        <designer-extension>
            <control-subpackage-name>rest</control-subpackage-name>
        </designer-extension>
  	</faces-config-extension>

	<complex-type>
	     
    	<description>Base class for all the Domino based services</description>
    	<display-name>Abstract Domino Service</display-name>
    	<complex-id>com.ibm.xsp.extlib.component.rest.DominoService</complex-id>
    	<complex-class>com.ibm.xsp.extlib.component.rest.DominoService</complex-class>
    	<!-- TODO check that server!!dbname works -->
       	<group-type-ref>com.ibm.xsp.extlib.group.databaseNameProp</group-type-ref>

    	<complex-extension>
    		<base-complex-id>com.ibm.xsp.extlib.component.rest.AbstractRestService</base-complex-id>
            <designer-extension>
                <tags>
                    todo
                </tags>
            </designer-extension>
    	</complex-extension>
  	</complex-type>
  	
	<complex-type>
    	<description>Abstract Domino View service implementation</description>
    	<display-name>Abstract Domino View Service</display-name>
    	<complex-id>com.ibm.xsp.extlib.component.rest.DominoViewService</complex-id>
    	<complex-class>com.ibm.xsp.extlib.component.rest.DominoViewService</complex-class>
    	<group-type-ref>com.ibm.xsp.extlib.group.viewFolderNameProp</group-type-ref>
    	
    	<property>
      		<description>Request scope variable name through which a view row will be made available</description>
      		<display-name>Var</display-name>
      		<property-name>var</property-name>
      		<property-class>java.lang.String</property-class>
      		<property-extension>
	    		<allow-run-time-binding>false</allow-run-time-binding>
	    		<designer-extension>
	    			<editor>com.ibm.xsp.extlib.designer.tooling.editor.VarNameEditor</editor>
	    		</designer-extension>
      		</property-extension>
      		
    	</property>
  		
        <property>
            <!-- # The constant names should not be translated: Entries 0x0001, Top Level 0x0002, Timestamp 0x0004. -->
            <description>Specifies the combination of global values returned by the service. Multiple global value constants can be combined using the bitwise OR operator (|). The global constants are: Entries 0x0001, Top Level 0x0002, Timestamp 0x0004.</description>
            <display-name>Global Values</display-name>
            <property-name>globalValues</property-name>
            <property-class>int</property-class>
            <property-extension>
                <designer-extension>
                    <editor>com.ibm.xsp.extlib.designer.tooling.editor.BitwiseFlagsEditor</editor>
                    <editor-parameter>
                        0x0001:Entries 
                        0x0002:Top Level
                        0x0004:Timestamp
                    </editor-parameter>
                </designer-extension>
            </property-extension>
        </property>
        <property>
            <!-- # The system column names should not be translated: NoteID 0x0001, UNID 0x0002, Position 0x0004, Read 0x0008, Siblings 0x0010, Descendants 0x0020, Children 0x0040, Indent 0x0080, Form 0x0100, Category 0x0200, Response 0x0400 -->
            <description>Specifies which system columns should be returned by the service. Multiple system columns can be combined using the bitwise OR operator (|). The system columns are, NoteID 0x0001, UNID 0x0002, Position 0x0004, Read 0x0008, Siblings 0x0010, Descendants 0x0020, Children 0x0040, Indent 0x0080, Form 0x0100, Category 0x0200, Response 0x0400.</description>
            <display-name>System Columns</display-name>
            <property-name>systemColumns</property-name>
            <property-class>int</property-class>
            <property-extension>
                <designer-extension>
                    <editor>com.ibm.xsp.extlib.designer.tooling.editor.BitwiseFlagsEditor</editor>
                    <editor-parameter>
                        0x0001:NoteID 
                        0x0002:UNID 
                        0x0004:Position 
                        0x0008:Read 
                        0x0010:Siblings 
                        0x0020:Descendants 
                        0x0040:Children 
                        0x0080:Indent 
                        0x0100:Form 
                        0x0200:Category 
                        0x0400:Response 
                    </editor-parameter>
                </designer-extension>
            </property-extension>
        </property>
        <property>
            <description>Specifies whether all the view columns should be automatically returned by the service. Default is "false".</description>
            <display-name>Default Columns</display-name>
            <property-name>defaultColumns</property-name>
            <property-class>boolean</property-class>
        </property>
      	<property>
        	<description>The list of view columns that should be returned by the service</description>
        	<display-name>Columns</display-name>
        	<property-name>columns</property-name>
            <property-class>java.util.List</property-class>
        	<property-extension>
                <allow-run-time-binding>false</allow-run-time-binding>
          		<collection-property>true</collection-property>
          		<property-item-class>com.ibm.xsp.extlib.component.rest.DominoViewColumn</property-item-class>
            	<property-add-method>addColumn</property-add-method>
        	</property-extension>
      	</property>
        <property>
            <description>Specifies the start index for the first row that should be returned by the service</description>
            <display-name>Start Index</display-name>
            <property-name>start</property-name>
            <property-class>int</property-class>
        </property>
        <property>
            <description>Specifies the number of rows that should be returned by the service</description>
            <display-name>Row Count</display-name>
            <property-name>count</property-name>
            <property-class>int</property-class>
        </property>
            <!-- TODO MWD is this the sort or resort feature -->
    	<property>
      		<description>A column that can be used to sort the view data</description>
      		<display-name>Sort Column</display-name>
      		<property-name>sortColumn</property-name>
      		<property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <tags>
                        todo
                    </tags>
                </designer-extension>
            </property-extension>
    	</property>
    	 <!-- TODO MWD is this the sort or resort feature? May need a third option "toggle" if it is a dynamic resort -->
    	<property>
      		<description>The order by which you wish to collate the sort column</description>
      		<display-name>Sort Order</display-name>
      		<property-name>sortOrder</property-name>
      		<property-class>java.lang.String</property-class>
          	<property-extension>
            	<designer-extension>
                    <editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
                    <editor-parameter>
                        descending
                        ascending
                    </editor-parameter>
                    <tags>
                        todo
                    </tags>
            	</designer-extension>
          	</property-extension>
    	</property>

    	<property>
      		<description>%/com.ibm.xsp.model.domino.dominoView/expandLevel/descr%</description>
      		<display-name>%/com.ibm.xsp.model.domino.dominoView/expandLevel/name%</display-name>
      		<property-name>expandLevel</property-name>
      		<property-class>int</property-class>
    	</property>
    	<property>
      		<description>%/com.ibm.xsp.model.domino.dominoView/parentId/descr%</description>
      		<display-name>%/com.ibm.xsp.model.domino.dominoView/parentId/name%</display-name>
      		<property-name>parentId</property-name>
      		<property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <!-- This is not a control reference, it is a reference to a document ID -->
                    <tags>
                        not-control-id-reference
                     </tags>
                </designer-extension>
            </property-extension>
    	</property>
    	<property>
      		<description>%/com.ibm.xsp.model.domino.dominoView/categoryFilter/descr%</description>
      		<display-name>%/com.ibm.xsp.model.domino.dominoView/categoryFilter/name%</display-name>
      		<property-name>categoryFilter</property-name>
      		<property-class>java.lang.String</property-class>
    	</property>
  		<property>
			<description>%/com.ibm.xsp.model.domino.dominoView/startKeys/descr%</description>
			<display-name>%/com.ibm.xsp.model.domino.dominoView/startKeys/name%</display-name>
			<property-name>startKeys</property-name>
			<property-class>java.lang.Object</property-class>
		</property>
    	<property>
      		<description>%/com.ibm.xsp.model.domino.dominoView/keys/descr%</description>
      		<display-name>%/com.ibm.xsp.model.domino.dominoView/keys/name%</display-name>
      		<property-name>keys</property-name>
      		<property-class>java.lang.Object</property-class>
    	</property>
    	<property>
      		<description>%/com.ibm.xsp.model.domino.dominoView/keysExactMatch/descr%</description>
      		<display-name>%/com.ibm.xsp.model.domino.dominoView/keysExactMatch/name%</display-name>
      		<property-name>keysExactMatch</property-name>
      		<property-class>boolean</property-class>
    	</property>
    	<!-- TODO !!! Add new FTSearch filters to enable sortable results for 8.5.3. !!! -->
    	<property>
      		<description>%/com.ibm.xsp.model.domino.dominoView/search/descr%</description>
      		<display-name>%/com.ibm.xsp.model.domino.dominoView/search/name%</display-name>
      		<property-name>search</property-name>
      		<property-class>java.lang.String</property-class>
      		<property-extension>
        		<localizable>true</localizable>
        		<designer-extension>
                  <tags>todo</tags>
                </designer-extension>
      		</property-extension>
    	</property>
        <property>
            <description>%/com.ibm.xsp.model.domino.dominoView/searchMaxDocs/descr%</description>
            <display-name>%/com.ibm.xsp.model.domino.dominoView/searchMaxDocs/name%</display-name>
            <property-name>searchMaxDocs</property-name>
            <property-class>int</property-class>
        </property>
    	<property>
			<description>Form used when creating new documents</description>
			<display-name>Form Name</display-name>
			<property-name>formName</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
                <designer-extension>
                    <editor>com.ibm.xsp.extlib.designer.tooling.editor.FormNameEditor</editor>
                </designer-extension>
            </property-extension>
		</property>
    	<property>
      		<description>Validates documents by executing the default value, translation, and validation formulas defined in the underlying form</description>
      		<display-name>Compute With Form</display-name>
      		<property-name>computeWithForm</property-name>
      		<property-class>boolean</property-class>
      		<property-extension>
                <designer-extension>
                  <tags>todo</tags>
                  <!-- TODO this is a boolean, but the one in the XPages runtime is a String
                  with options:
                      onload
                      onsave
                      both
                   -->
                </designer-extension>
            </property-extension>
    	</property>		
    	<!-- TODO Are these doc events valid on a View REST service - what is the use case ??? --> 
    	<!-- TODO If valid, these do not show in Events tab ... applies to all remaining props --> 
    	<property>
      		<description>Triggered before creating a new document</description>
      		<display-name>Query New Document Method Binding</display-name>
      		<property-name>queryNewDocument</property-name>
      		<property-class>javax.faces.el.MethodBinding</property-class>
      		<property-extension>
        		<method-binding-property>true</method-binding-property>
        		<designer-extension>
                  <tags>todo</tags>
                </designer-extension>
      		</property-extension>
    	</property>
    	<property>
      		<description>Triggered before opening the document</description>
      		<display-name>Query Open Document Method Binding</display-name>
      		<property-name>queryOpenDocument</property-name>
      		<property-class>javax.faces.el.MethodBinding</property-class>
      		<property-extension>
        		<method-binding-property>true</method-binding-property>
      		</property-extension>
    		</property>
    	<property>
      		<description>Triggered before saving the document</description>
      		<display-name>Query Save Document Method Binding</display-name>
      		<property-name>querySaveDocument</property-name>
      		<property-class>javax.faces.el.MethodBinding</property-class>
      		<property-extension>
        		<method-binding-property>true</method-binding-property>
      		</property-extension>
    	</property>
    	<property>
      		<description>Triggered before deleting the document</description>
      		<display-name>Query Delete Document Method Binding</display-name>
      		<property-name>queryDeleteDocument</property-name>
      		<property-class>javax.faces.el.MethodBinding</property-class>
      		<property-extension>
        		<method-binding-property>true</method-binding-property>
      		</property-extension>
    	</property>
    	<property>
      		<description>Triggered after creating the document</description>
      		<display-name>Post New Document Method Binding</display-name>
      		<property-name>postNewDocument</property-name>
      		<property-class>javax.faces.el.MethodBinding</property-class>
      		<property-extension>
        		<method-binding-property>true</method-binding-property>
      		</property-extension>
    	</property>
    	<property>
      		<description>Triggered after opening the document</description>
      		<display-name>Post Open Document Method Binding</display-name>
      		<property-name>postOpenDocument</property-name>
      		<property-class>javax.faces.el.MethodBinding</property-class>
      		<property-extension>
        		<method-binding-property>true</method-binding-property>
      		</property-extension>
    	</property>
    	<property>
      		<description>Triggered after saving the document</description>
      		<display-name>Post Save Document Method Binding</display-name>
      		<property-name>postSaveDocument</property-name>
      		<property-class>javax.faces.el.MethodBinding</property-class>
      		<property-extension>
        		<method-binding-property>true</method-binding-property>
      		</property-extension>
    	</property>
    	<property>
      		<description>Triggered after deleting the document</description>
      		<display-name>Post Delete Document Method Binding</display-name>
      		<property-name>postDeleteDocument</property-name>
      		<property-class>javax.faces.el.MethodBinding</property-class>
      		<property-extension>
        		<method-binding-property>true</method-binding-property>
      		</property-extension>
    	</property>

    	<complex-extension>
    		<base-complex-id>com.ibm.xsp.extlib.component.rest.DominoService</base-complex-id>
    	</complex-extension>
  	</complex-type>
     
	<complex-type>
    	<description>A column in a Domino view service, indicating an underlying column in a Domino view to be returned by the service. The Domino view services can also handle Domino folders, which are similar to views, so this may be used as a column in a folder.</description>
    	<display-name>Domino View or Folder Column</display-name>
    	<complex-id>com.ibm.xsp.extlib.component.rest.DominoViewColumn</complex-id>
    	<complex-class>com.ibm.xsp.extlib.component.rest.DominoViewColumn</complex-class>
    	 <!-- TODO better description - localizable ???? -->
  		<property>
			<description>A field name used to describe the column data or value. This will be referenced by the display control to retrieve the field values.</description>
			<display-name>Name</display-name>
			<property-name>name</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
               <required>true</required>
               <!-- Note, this is not a localizable text. It is declaring a field-name
               that will be referenced from the xe:djxDataGridColumn field property.
               If you wish to provide localizable text as the column header, use
               the xe:djxDataGridColumn label property. -->
            </property-extension>
		</property>
  		<property>
			<description>The name of the column in the Domino view or folder. It can be the programmatic name or title.</description>
			<display-name>Column Name</display-name>
			<property-name>columnName</property-name>
			<property-class>java.lang.String</property-class>
		</property>	
  		<property>
  			<!-- # "columnName" should not be translated. -->
			<description>Value to be displayed instead of the column data. This is only used when the "columnName" property is absent.</description>
			<display-name>Value</display-name>
			<property-name>value</property-name>
			<property-class>java.lang.Object</property-class>
			<property-extension>
                <localizable>true</localizable>
                <designer-extension>
                  <tags>
                      localizable-text
                  </tags>
                </designer-extension>
            </property-extension>
		</property>
    	<complex-extension>
      		<tag-name>restViewColumn</tag-name>
            <designer-extension>
                <tags>
                    todo
                </tags>
            </designer-extension>
    	</complex-extension>
  	</complex-type>
  	
  	 <!-- TODO conflicting descriptions/display names due to copy/paste? NORMALIZE names -->
	<complex-type>
	<!-- TODO update spellcheck test to complain for non-uppercase JSON occurences -->
	<!-- TODO better description -->
    	<description>Domino JSON legacy view service implementation, emulating the older JSON service from iNotes</description>
    	<display-name>Domino View as Legacy JSON</display-name>
    	<complex-id>com.ibm.xsp.extlib.component.rest.DominoViewJsonLegacyService</complex-id>
    	<complex-class>com.ibm.xsp.extlib.component.rest.DominoViewJsonLegacyService</complex-class>
    	<group-type-ref>com.ibm.xsp.extlib.rest.json.options</group-type-ref>
    	<complex-extension>
      		<tag-name>viewJsonLegacyService</tag-name>
    		<base-complex-id>com.ibm.xsp.extlib.component.rest.DominoViewService</base-complex-id>
            <designer-extension>
                <tags>
                    todo
                </tags>
            </designer-extension>
    	</complex-extension>
  	</complex-type>
  	
	<complex-type>
	   <!-- TODO better description : this one is not comprehensible  -->
    	<description>Domino JSON item file view service implementation</description>
    	<display-name>Domino View as JSON Item File</display-name>
    	<complex-id>com.ibm.xsp.extlib.component.rest.DominoViewItemFileService</complex-id>
    	<complex-class>com.ibm.xsp.extlib.component.rest.DominoViewItemFileService</complex-class>
    	<group-type-ref>com.ibm.xsp.extlib.rest.json.options</group-type-ref>
    	<complex-extension>
      		<tag-name>viewItemFileService</tag-name>
    		<base-complex-id>com.ibm.xsp.extlib.component.rest.DominoViewService</base-complex-id>
            <designer-extension>
                <tags>
                    todo
                </tags>
            </designer-extension>
    	</complex-extension>
  	</complex-type>

	<complex-type>
    	<description>Domino JSON view service implementation</description>
    	<display-name>Domino View as Standard JSON</display-name>
    	<complex-id>com.ibm.xsp.extlib.component.rest.DominoViewJsonService</complex-id>
    	<complex-class>com.ibm.xsp.extlib.component.rest.DominoViewJsonService</complex-class>
    	<group-type-ref>com.ibm.xsp.extlib.rest.json.options</group-type-ref>
    	<complex-extension>
      		<tag-name>viewJsonService</tag-name>
    		<base-complex-id>com.ibm.xsp.extlib.component.rest.DominoViewService</base-complex-id>
    	</complex-extension>
  	</complex-type>
  	
	<complex-type>
    	<description>Domino XML standard view service implementation, emulating the older XML service from iNotes</description>
    	<display-name>Domino View as Legacy XML</display-name>
    	<complex-id>com.ibm.xsp.extlib.component.rest.DominoViewXmlLegacyService</complex-id>
    	<complex-class>com.ibm.xsp.extlib.component.rest.DominoViewXmlLegacyService</complex-class>
    	<group-type-ref>com.ibm.xsp.extlib.rest.xml.options</group-type-ref>
    	<complex-extension>
      		<tag-name>viewXmlLegacyService</tag-name>
    		<base-complex-id>com.ibm.xsp.extlib.component.rest.DominoViewService</base-complex-id>
    	</complex-extension>
  	</complex-type>
  	
  	<!-- TODO "legacy" usage : minimize where possible -->  
  	<complex-type>
    	<description>Domino Calendar JSON legacy view service implementation, emulating the older JSON service from iNotes</description>
    	<display-name>Domino Calendar Entries as Legacy JSON</display-name>
    	<complex-id>com.ibm.xsp.extlib.component.rest.DominoCalendarJsonLegacyService</complex-id>
    	<complex-class>com.ibm.xsp.extlib.component.rest.DominoCalendarJsonLegacyService</complex-class>
        <group-type-ref>com.ibm.xsp.extlib.group.viewNameProp</group-type-ref>
    	<group-type-ref>com.ibm.xsp.extlib.rest.json.options</group-type-ref>
    	
    	<property>
      		<description>Request scope variable name through which a view row will be made available</description>
      		<display-name>Var</display-name>
      		<property-name>var</property-name>
      		<property-class>java.lang.String</property-class>
      		<property-extension>
	    		<allow-run-time-binding>false</allow-run-time-binding>
	    		<designer-extension>
	    			<editor>com.ibm.xsp.extlib.designer.tooling.editor.VarNameEditor</editor>
	    		</designer-extension>
      		</property-extension>
    	</property>
		
		<!-- TODO check out error handling for invalid or bad backend Domino calendar views -->
		<!-- TODO test with different timezones e.g. USA and Ireland (server && browser)-->
		<!-- TODO Date formatting for Swedish: xpages uses ICU, rather than Java native date formats
		because the Swedish government changed the swedish date formats, and Java is still using the old format
		When we use the wrong format, the swedish translators complain and log bugs.
		The code that's doing the date formatting may be in the REST Services codebase. -->
		<property>
		    <!--# Do not translate the quoted $number: e.g. "$123" -->
			<description>The name of the column in the calendar view that contains the date of the calendar entries. Default column name is "$134".</description>
			<display-name>Calendar Date Column</display-name>
			<property-name>colCalendarDate</property-name>
			<property-class>java.lang.String</property-class>
          	<property-extension>
        		<required>false</required>
                <designer-extension>
                    <!-- see the comments before this property -->
                    <tags>
                        todo
                    </tags>
                </designer-extension>
          	</property-extension>
		</property>
		<property>
		    <!--# Do not translate the quoted $number: e.g. "$123" -->
			<description>The name of the column in the calendar view that contains the start time of the calendar entries. Default column name is "$144".</description>
			<display-name>Start Time Column</display-name>
			<property-name>colStartTime</property-name>
			<property-class>java.lang.String</property-class>
          	<property-extension>
        		<required>false</required>
          	</property-extension>
		</property>
		<property>
		    <!--# Do not translate the quoted $number: e.g. "$123" -->
			<description>The name of the column in the calendar view that contains the end time of the calendar entries. Default column name is "$146".</description>
			<display-name>End Time Column</display-name>
			<property-name>colEndTime</property-name>
			<property-class>java.lang.String</property-class>
          	<property-extension>
        		<required>false</required>
          	</property-extension>
		</property>
		<property>
		    <!--# Do not translate the quoted $number: e.g. "$123" -->
			<description>The name of the column in the calendar view that contains the subject field for the calendar entries. Default column name is "$147".</description>
			<display-name>Subject Column</display-name>
			<property-name>colSubject</property-name>
			<property-class>java.lang.String</property-class>
          	<property-extension>
        		<required>false</required>
          	</property-extension>
		</property>	
		<property>
		    <!--# Do not translate the quoted $number: e.g. "$123" -->
			<description>The name of the column in the calendar view that contains the alternative subject field, if any, for the calendar entries. Default column name is "$151".</description>
			<display-name>Alternative Subject Column</display-name>
			<property-name>colAltSubject</property-name>
			<property-class>java.lang.String</property-class>
          	<property-extension>
        		<required>false</required>
                <designer-extension>
                     <!-- not localizable because it is a column name, not displayed text.-->
                    <tags>
                        not-localizable
                    </tags>
                </designer-extension>
          	</property-extension>
		</property>	
		<property>
		    <!--# Do not translate the quoted $number: e.g. "$123" -->
			<description>The name of the column in the calendar view that contains the calendar entry icon. The iNotes calendar has icons depicting the entry type (e.g. meeting, anniversary etc) or entry status (e.g. accepted). An integer icon ID is returned by the service. Default column name is "$149".</description>
			<display-name>Entry Icon Column</display-name>
			<property-name>colEntryIcon</property-name>
			<property-class>java.lang.String</property-class>
          	<property-extension>
				<designer-extension>
					<!--  This is the name of a column containing an icon path, not the icon path itself.
					so the tag not-image-path prevents a fail in ImageEditorTest -->
					<tags>
						not-image-path
					</tags>
				</designer-extension>
          	</property-extension>
		</property>		
		<property>
		    <!--# Do not translate the quoted $number: e.g. "$123" -->
			<description>The name of the column in the calendar view that contains the event type for the calendar entries. An integer entry ID is returned by the service, where 0 = appointment, 1 = anniversary, 2 = all day event, 3 = meeting etc. Default column name is "$152".</description>
			<display-name>Entry Type Column</display-name>
			<property-name>colEntryType</property-name>
			<property-class>java.lang.String</property-class>
          	<property-extension>
        		<required>false</required>
          	</property-extension>
		</property>	
		<property>
		    <!--# Do not translate the quoted $number: e.g. "$123" -->
		    <description>The name of the column in the calendar view that contains the identity of the person responsible for the calendar entry, e.g. the name of a person who sent a meeting invitation. Default column name is "$153".</description>
			<display-name>Chairperson Column</display-name>
			<property-name>colChair</property-name>
			<property-class>java.lang.String</property-class>
          	<property-extension>
        		<required>false</required>
          	</property-extension>
		</property>
		<property>
		    <!--# Do not translate the quoted $number: e.g. "$123" -->
			<description>The name of the column in the calendar view that contains the confidential status of the calendar entry. An integer entry ID is returned by the service, where 0 = non-confidential, 1 = confidential. Default column name is "$154".</description>
			<display-name>Confidential Column</display-name>
			<property-name>colConfidential</property-name>
			<property-class>java.lang.String</property-class>
          	<property-extension>
        		<required>false</required>
          	</property-extension>
		</property>	
		<property>
		    <!--# Do not translate the quoted $number: e.g. "$123". Do not translate quoted words: "Accepted", "Tentatively Accepted", "Draft", "Countered"-->
			<description>The name of the column in the calendar view that contains the status of the calendar entry. Status values are returned by the service, e.g. "Accepted", "Tentatively Accepted", "Draft", "Countered". Default column name is "$160".</description>
			<display-name>Status Column</display-name>
			<property-name>colStatus</property-name>
			<property-class>java.lang.String</property-class>
          	<property-extension>
        		<required>false</required>
          	</property-extension>
		</property>	
		<property>
		    <!--# Do not translate the quoted $word: e.g. "$UserData" -->
			<description>The name of the column in the calendar view that contains custom data. In the standard Notes calendar, the custom data column contains whatever is found in a $UserData item in the calendar entry. Default column name is "$UserData".</description>
			<display-name>Custom Data Column</display-name>
			<property-name>colCustomData</property-name>
			<property-class>java.lang.String</property-class>
          	<property-extension>
        		<required>false</required>
          	</property-extension>
		</property>
			
    	<complex-extension>
      		<tag-name>calendarJsonLegacyService</tag-name>
    		<base-complex-id>com.ibm.xsp.extlib.component.rest.DominoService</base-complex-id>
            <designer-extension>
                <tags>
                    todo
                </tags>
            </designer-extension>
    	</complex-extension>
  	</complex-type>
  	
  	<complex-type>
    	<description>Abstract Domino Document service implementation</description>
    	<display-name>Abstract Domino Document Service</display-name>
    	<complex-id>com.ibm.xsp.extlib.component.rest.DominoDocumentService</complex-id>
    	<complex-class>com.ibm.xsp.extlib.component.rest.DominoDocumentService</complex-class>
    	<property>
      		<description>Request scope variable name through which a document row will be made available</description>
      		<display-name>Var</display-name>
      		<property-name>var</property-name>
      		<property-class>java.lang.String</property-class>
      		<property-extension>
	    		<allow-run-time-binding>false</allow-run-time-binding>
	    		<designer-extension>
	    			<editor>com.ibm.xsp.extlib.designer.tooling.editor.VarNameEditor</editor>
	    		</designer-extension>
      		</property-extension>
    	</property>
  		<property>
  		    <!-- TODO expand description -->
			<description>Domino Document UNID</description>
			<display-name>Document UNID</display-name>
			<property-name>documentUnid</property-name>
			<property-class>java.lang.String</property-class>
          	<property-extension>
	       		<required>false</required>
                <designer-extension>
                    <tags>
                        todo
                    </tags>
                </designer-extension>
          	</property-extension>
		</property>
        <property>
            <!-- # The constant names should not be translated: 1 - Entries, 2 - Top Level, 4 - Timestamp -->
            <description>Specifies the global values returned by the service. This may specify multiple global value constants, combined using the bitwise AND operator (&amp;). The global value constants are: 1 - Entries, 2 - Top Level, 4 - Timestamp.</description>
            <display-name>Global Values</display-name>
            <property-name>globalValues</property-name>
            <property-class>int</property-class>
            <property-extension>
                <designer-extension>
                    <editor>com.ibm.xsp.extlib.designer.tooling.editor.BitwiseFlagsEditor</editor>
                    <editor-parameter>
                        0x0001:Entries
                        0x0002:Top Level
                        0x0004:Timestamp
                    </editor-parameter>
                </designer-extension>
            </property-extension>
        </property>
        <property>
            <!-- # The system item names should not be translated: NoteID 0x0001, UNID 0x0002, ParentID 0x0004, Created 0x0008, Modified 0x0010, Authors 0x0020 -->
            <description>Specifies whether some system items should be added. This may specify multiple system items, combined using the bitwise AND operator (&amp;). The system items are, NoteID 0x0001, UNID 0x0002, ParentID 0x0004, Created 0x0008, Modified 0x0010, Authors 0x0020.</description>
            <display-name>System Items</display-name>
            <property-name>systemItems</property-name>
            <property-class>int</property-class>
            <property-extension>
                <designer-extension>
                    <editor>com.ibm.xsp.extlib.designer.tooling.editor.BitwiseFlagsEditor</editor>
                    <editor-parameter>
                        0x0001:NoteID
                        0x0002:UNID
                        0x0004:ParentID
                        0x0008:Created
                        0x0010:Modified
                        0x0020:Authors
                    </editor-parameter>
                </designer-extension>
            </property-extension>
        </property>
        <property>
            <description>Specifies whether the default document items should be automatically added</description>
            <display-name>Default Items (Fields)</display-name>
            <property-name>defaultItems</property-name>
            <property-class>boolean</property-class>
        </property>
        <!-- TODO mention response doc implication for parentId and should not find both together at the same time -->
    	<property>
      		<description>ID of the parent Domino document</description>
      		<display-name>Parent ID</display-name>
      		<property-name>parentId</property-name>
      		<property-class>java.lang.String</property-class>
            <property-extension>
                <designer-extension>
                    <!-- This is not a control reference, it is a reference to a document ID -->
                    <tags>
                        todo
                        not-control-id-reference
                    </tags>
                </designer-extension>
            </property-extension>
    	</property>
    	<!-- TODO update desc - not necessarily new -->
    	<!-- TODO databasename missing : why ? -->
    	<property>
			<description>Form used when creating new documents</description>
			<display-name>Form Name</display-name>
			<property-name>formName</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
                <designer-extension>
                    <editor>com.ibm.xsp.extlib.designer.tooling.editor.FormNameEditor</editor>
                    <tags>
                        todo
                    </tags>
                </designer-extension>
            </property-extension>
		</property>
		<!--- TODO BREAKING CHANGE POSSIBILITY onOpen, onSave, both - why boolean here ??? and above also !!! -->
    	<property>
      		<description>Validates documents by executing the default value, translation, and validation formulas defined in the form</description>
      		<display-name>Compute With Form</display-name>
      		<property-name>computeWithForm</property-name>
      		<property-class>boolean</property-class>
            <property-extension>
                <designer-extension>
                    <tags>
                        todo
                    </tags>
                </designer-extension>
            </property-extension>
    	</property>	
    	<!-- TODO reference "maintain unread marks" or none of this applies -->
       	<property>
      		<description>Allow documents to be marked as having been read when referenced. This defaults to true, so that documents are marked as read, and can be set to false to prevent documents being marked as read.</description>
      		<display-name>Mark Documents as Read</display-name>
      		<property-name>markRead</property-name>
      		<property-class>boolean</property-class>
            <property-extension>
                <designer-extension>
                    <!-- This defaults to true at runtime, so it will only
                    be possible to set the value in a theme file
                    in release 8.5.3 or later using the baseValue attribute.
                    runtime-default-true prevents a fail in BooleanPropertyDefaultTest -->
                    <tags>
                        runtime-default-true
                        todo
                    </tags>
                </designer-extension>
            </property-extension>
    	</property>	
    	<!-- TODO BREAKING CHANGE POSSIBILITY ??? what's the use case ... as described, seems to apply to a doc collection  -->    
    	<property>
    	    <!-- # "Session.createDateTime(String)" should not be translated. "API" should not be translated (it is a type of technical documentation - Application Programmer Interface) -->
      		<description>The start date and time for collecting documents modified in a database. Only documents modified on or after the given date will be included in the search results. The format of the date text is described in the Domino API documents for: Session.createDateTime(String)</description>
      		<display-name>Since Modified Date Text</display-name>
      		<property-name>since</property-name>
      		<property-class>java.lang.String</property-class>
      		<property-extension>
      			<!-- TODO why is this a localizable String, and not a Date, 
      			or a non-localizable Date-format String -->
      			<!-- This property was marked as localizable in the initial release
      			changed to non-localizable in version 8.5.32005. However the value 
      			should never have been localizable, and is actually likely to be computed, 
      			rather than hard-coded in the .xsp file, and it should not change per locale. -->
        		<!-- <localizable>true</localizable> -->
        		<designer-extension>
        			<tags>
        				todo
        			</tags>
        		</designer-extension>
      		</property-extension>
    	</property>
    	<!-- TODO BREAKING CHANGE POSSIBILITY ??? what's the use case ... as described, seems to apply to a doc collection  -->    
    	<property>
      		<description>Text to search for in documents in a database. This value is searched for using full text search.</description>
      		<display-name>Search Text</display-name>
      		<property-name>search</property-name>
      		<property-class>java.lang.String</property-class>
      		<property-extension>
        		<localizable>true</localizable>
        		<designer-extension>
        			<tags>
        				localizable-text
                        todo
        			</tags>
        		</designer-extension>
      		</property-extension>
    	</property>
    	<!-- TODO BREAKING CHANGE POSSIBILITY ??? what's the use case ... as described, seems to apply to a doc collection  -->
    	<!-- TODO 853 new search features to be applied in due course ???  -->        
    	<property>
      		<description>Maximum number of documents to include in the search result</description>
      		<display-name>Maximum Search Documents</display-name>
      		<property-name>searchMaxDocs</property-name>
      		<property-class>int</property-class>
            <property-extension>
                <designer-extension>
                    <tags>
                        todo
                    </tags>
                </designer-extension>
            </property-extension>
    	</property>
    	<!-- TODO resolve weirdness here - prop not understood and no sample available -->
       	<property>
      		<description>Output data type definition for types that are not native to JavaScript, such as date values</description>
      		<display-name>Output Data Type Definition</display-name>
      		<property-name>strongType</property-name>
      		<property-class>boolean</property-class>
            <property-extension>
                <designer-extension>
                    <tags>
                        todo
                    </tags>
                </designer-extension>
            </property-extension>
    	</property>
    	<!-- TODO explain that this is a list of fields to be included in the result set -->
    	<property>
        	<description>Items list</description>
        	<display-name>Items</display-name>
        	<property-name>items</property-name>
            <property-class>java.util.List</property-class>
        	<property-extension>
                <allow-run-time-binding>false</allow-run-time-binding>
          		<collection-property>true</collection-property>
          		<property-item-class>com.ibm.xsp.extlib.component.rest.DominoDocumentItem</property-item-class>
            	<property-add-method>addItem</property-add-method>
                <designer-extension>
                    <tags>
                        todo
                    </tags>
                </designer-extension>
        	</property-extension>
      	</property>
      	<!-- TODO can we get these to show up in Events panel ??? Talk to Graham -->
      	<!-- TODO re above : if possible, add subcategories for event type, mouse, focus, keyboard etc -->
      	<!-- TODO query : must note that event can return false (it's not just a "pre" event) -->
    	<property>
      		<description>Triggered before creating a new document</description>
      		<display-name>Query New Document Method Binding</display-name>
      		<property-name>queryNewDocument</property-name>
      		<property-class>javax.faces.el.MethodBinding</property-class>
      		<property-extension>
        		<method-binding-property>true</method-binding-property>
                <designer-extension>
                    <tags>
                        todo
                    </tags>
                </designer-extension>
      		</property-extension>
    	</property>
    	<property>
      		<description>Triggered before opening the document</description>
      		<display-name>Query Open Document Method Binding</display-name>
      		<property-name>queryOpenDocument</property-name>
      		<property-class>javax.faces.el.MethodBinding</property-class>
      		<property-extension>
        		<method-binding-property>true</method-binding-property>
      		</property-extension>
    		</property>
    	<property>
      		<description>Triggered before saving the document</description>
      		<display-name>Query Save Document Method Binding</display-name>
      		<property-name>querySaveDocument</property-name>
      		<property-class>javax.faces.el.MethodBinding</property-class>
      		<property-extension>
        		<method-binding-property>true</method-binding-property>
      		</property-extension>
    	</property>
    	<property>
      		<description>Triggered before deleting the document</description>
      		<display-name>Query Delete Document Method Binding</display-name>
      		<property-name>queryDeleteDocument</property-name>
      		<property-class>javax.faces.el.MethodBinding</property-class>
      		<property-extension>
        		<method-binding-property>true</method-binding-property>
      		</property-extension>
    	</property>
    	<property>
      		<description>Triggered after creating the document</description>
      		<display-name>Post New Document Method Binding</display-name>
      		<property-name>postNewDocument</property-name>
      		<property-class>javax.faces.el.MethodBinding</property-class>
      		<property-extension>
        		<method-binding-property>true</method-binding-property>
      		</property-extension>
    	</property>
    	<property>
      		<description>Triggered after opening the document</description>
      		<display-name>Post Open Document Method Binding</display-name>
      		<property-name>postOpenDocument</property-name>
      		<property-class>javax.faces.el.MethodBinding</property-class>
      		<property-extension>
        		<method-binding-property>true</method-binding-property>
      		</property-extension>
    	</property>
    	<property>
      		<description>Triggered after saving the document</description>
      		<display-name>Post Save Document Method Binding</display-name>
      		<property-name>postSaveDocument</property-name>
      		<property-class>javax.faces.el.MethodBinding</property-class>
      		<property-extension>
        		<method-binding-property>true</method-binding-property>
      		</property-extension>
    	</property>
    	<!-- TODO interesting to test this ... what happens to var after doc is deleted ??? --> 
    	<property>
      		<description>Triggered after deleting the document</description>
      		<display-name>Post Delete Document Method Binding</display-name>
      		<property-name>postDeleteDocument</property-name>
      		<property-class>javax.faces.el.MethodBinding</property-class>
      		<property-extension>
        		<method-binding-property>true</method-binding-property>
                <designer-extension>
                    <tags>
                        todo
                    </tags>
                </designer-extension>
      		</property-extension>
    	</property>

    	<complex-extension>
    		<base-complex-id>com.ibm.xsp.extlib.component.rest.DominoService</base-complex-id>
    	</complex-extension>
  	</complex-type>
  	<!-- TODO Apply same criteria as Domino View Column -->
  	<complex-type>
    	<description>This configures an item or field in a Domino document to be returned by a Domino document service</description>
    	<display-name>Domino Document Item</display-name>
    	<complex-id>com.ibm.xsp.extlib.component.rest.DominoDocumentItem</complex-id>
    	<complex-class>com.ibm.xsp.extlib.component.rest.DominoDocumentItem</complex-class>
  		<property>
 			<description>The name given to the item when it is output by the document service. This can be different from the name in the underlying document.</description>
			<display-name>Name</display-name>
			<property-name>name</property-name>
			<property-class>java.lang.String</property-class>
		</property>
  		<property>
			<description>The name of the item or field in the Domino document</description>
			<display-name>Item Name</display-name>
			<property-name>itemName</property-name>
			<property-class>java.lang.String</property-class>
		</property>
  		<property>
			<description>Value to be displayed instead of the item value from the document. This is only used when the Item Name is absent.</description>
			<display-name>Value</display-name>
			<property-name>value</property-name>
			<property-class>java.lang.Object</property-class>
		</property>
    	<complex-extension>
      		<tag-name>restDocumentItem</tag-name>
            <designer-extension>
                <tags>
                    todo
                </tags>
            </designer-extension>
    	</complex-extension>
  	</complex-type>
  	
  	<complex-type>
    	<description>Domino JSON Document service implementation</description>
    	<display-name>Domino Document as Standard JSON</display-name>
    	<complex-id>com.ibm.xsp.extlib.component.rest.DominoDocumentJsonService</complex-id>
    	<complex-class>com.ibm.xsp.extlib.component.rest.DominoDocumentJsonService</complex-class>
    	<group-type-ref>com.ibm.xsp.extlib.rest.json.options</group-type-ref>
    	<complex-extension>
      		<tag-name>documentJsonService</tag-name>
    		<base-complex-id>com.ibm.xsp.extlib.component.rest.DominoDocumentService</base-complex-id>
    	</complex-extension>
  	</complex-type>
  	
  	<!-- TODO does this just return all the views in a db (only 3 props) -->
  	<!-- TODO what's the use case? Does this need extra options to filter contents (and handle folders also) -->
  	<complex-type>
    	<description>Domino JSON view collection service implementation</description>
    	<display-name>Domino View Collection as Standard JSON</display-name>
    	<complex-id>com.ibm.xsp.extlib.component.rest.DominoViewCollectionJsonService</complex-id>
    	<complex-class>com.ibm.xsp.extlib.component.rest.DominoViewCollectionJsonService</complex-class>
    	<group-type-ref>com.ibm.xsp.extlib.rest.json.options</group-type-ref>
    	<complex-extension>
      		<tag-name>viewCollectionJsonService</tag-name>
    		<base-complex-id>com.ibm.xsp.extlib.component.rest.DominoService</base-complex-id>
            <designer-extension>
                <tags>
                    todo
                </tags>
            </designer-extension>
    	</complex-extension>
  	</complex-type>
    
    <!-- TODO what does this do??? only 3 props... seems not very useful -->
  	<complex-type>
    	<description>Domino JSON Database collection service implementation</description>
    	<display-name>Domino Database Collection as Standard JSON</display-name>
    	<complex-id>com.ibm.xsp.extlib.component.rest.DominoDatabaseCollectionJsonService</complex-id>
    	<complex-class>com.ibm.xsp.extlib.component.rest.DominoDatabaseCollectionJsonService</complex-class>
    	<group-type-ref>com.ibm.xsp.extlib.rest.json.options</group-type-ref>
    	<complex-extension>
      		<tag-name>databaseCollectionJsonService</tag-name>
    		<base-complex-id>com.ibm.xsp.extlib.component.rest.DominoService</base-complex-id>
            <designer-extension>
                <tags>
                    todo
                </tags>
            </designer-extension>
    	</complex-extension>
  	</complex-type>
 
  	
</faces-config>
